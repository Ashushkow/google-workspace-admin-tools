#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ DocumentService
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_all_document_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã DocumentService"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ DocumentService")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        from src.api.google_api_client import GoogleAPIClient
        from src.config.enhanced_config import config
        
        google_client = GoogleAPIClient(config.settings.google_application_credentials)
        if not google_client.initialize():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google API –∫–ª–∏–µ–Ω—Ç")
            return False
        
        credentials = google_client.get_credentials()
        if not credentials:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            return False
        
        print("‚úÖ Credentials –ø–æ–ª—É—á–µ–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é DocumentService
        from src.api.drive_api import DriveAPI, DrivePermission
        from dataclasses import dataclass
        from typing import List
        import logging
        
        @dataclass
        class DocumentInfo:
            file_id: str
            name: str
            url: str
            owner: str
            permissions: List[DrivePermission]
        
        class DocumentService:
            """–ü–æ–ª–Ω–∞—è —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è DocumentService"""
            def __init__(self, credentials):
                self.drive_api = DriveAPI(credentials)
                self.logger = logging.getLogger(__name__)
            
            def get_document_info(self, document_url):
                try:
                    file_id = self.drive_api.extract_file_id_from_url(document_url)
                    if not file_id:
                        return None
                    drive_file = self.drive_api.get_file_info(file_id)
                    if not drive_file:
                        return None
                    return DocumentInfo(
                        file_id=drive_file.file_id,
                        name=drive_file.name,
                        url=drive_file.web_view_link,
                        owner=drive_file.owner_email or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                        permissions=drive_file.permissions
                    )
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ: {e}")
                    return None
            
            def list_document_permissions(self, document_url):
                try:
                    file_id = self.drive_api.extract_file_id_from_url(document_url)
                    if not file_id:
                        return []
                    permissions = self.drive_api.get_permissions(file_id)
                    return permissions
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {e}")
                    return []
            
            def get_role_description(self, role):
                role_descriptions = {
                    'reader': '–ß—Ç–µ–Ω–∏–µ',
                    'commenter': '–ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 
                    'writer': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
                    'owner': '–í–ª–∞–¥–µ–ª–µ—Ü'
                }
                return role_descriptions.get(role, role)
            
            def get_permission_type_description(self, perm_type):
                type_descriptions = {
                    'user': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                    'group': '–ì—Ä—É–ø–ø–∞',
                    'domain': '–î–æ–º–µ–Ω',
                    'anyone': '–õ—é–±–æ–π'
                }
                return type_descriptions.get(perm_type, perm_type)
        
        document_service = DocumentService(credentials)
        print("‚úÖ DocumentService —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã
        test_url = "https://docs.google.com/document/d/1iXos0bTHv3nwXcYvAjPSIYzQOflcygwjj4LKD5Rftdk/edit#heading=h.mfzrrwzcspx2"
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º get_document_info...")
        doc_info = document_service.get_document_info(test_url)
        if doc_info:
            print(f"   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç: {doc_info.name}")
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º list_document_permissions...")
        permissions = document_service.list_document_permissions(test_url)
        print(f"   ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–π: {len(permissions)}")
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º get_role_description...")
        role_desc = document_service.get_role_description('writer')
        print(f"   ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏ 'writer': {role_desc}")
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º get_permission_type_description...")
        type_desc = document_service.get_permission_type_description('user')
        print(f"   ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞ 'user': {type_desc}")
        
        print("\n‚úÖ –í—Å–µ –º–µ—Ç–æ–¥—ã DocumentService —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        print(f"‚ùå –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    test_all_document_methods()
