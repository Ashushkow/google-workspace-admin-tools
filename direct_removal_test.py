#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def direct_removal_test():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Google API"""
    
    print("üîç –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 60)
    
    group_email = "admin_team@sputnik8.com"
    user_email = "testdecember2023@sputnik8.com"
    
    print(f"üìß –ì—Ä—É–ø–ø–∞: {group_email}")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_email}")
    
    try:
        from src.api.google_api_client import GoogleAPIClient
        from src.config.enhanced_config import config
        
        # –°–æ–∑–¥–∞–µ–º API –∫–ª–∏–µ–Ω—Ç
        print("\nüîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google API –∫–ª–∏–µ–Ω—Ç–∞...")
        api_client = GoogleAPIClient(config.settings.google_application_credentials)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        if not api_client.initialize():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google API")
            return False
        
        print("‚úÖ Google API —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã {group_email}...")
        try:
            groups = api_client.get_groups()
            target_group = None
            
            for group in groups:
                if group.get('email', '').lower() == group_email.lower():
                    target_group = group
                    break
            
            if target_group:
                print(f"‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞–π–¥–µ–Ω–∞: {target_group.get('name', 'N/A')}")
            else:
                print(f"‚ùå –ì—Ä—É–ø–ø–∞ {group_email} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã:")
                for i, group in enumerate(groups[:5]):
                    print(f"   {i+1}. {group.get('email', 'N/A')}")
                return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥—Ä—É–ø–ø: {e}")
            return False
        
        # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã {group_email}...")
        try:
            members = api_client.get_group_members(group_email)
            print(f"üìä –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}")
            
            # –ò—â–µ–º –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            target_member = None
            for member in members:
                if member.get('email', '').lower() == user_email.lower():
                    target_member = member
                    break
            
            if target_member:
                role = target_member.get('role', 'N/A')
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ —Å —Ä–æ–ª—å—é: {role}")
            else:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ")
                print("üìã –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã:")
                for i, member in enumerate(members[:10]):
                    email = member.get('email', 'N/A')
                    role = member.get('role', 'N/A')
                    print(f"   {i+1}. {email} ({role})")
                
                print("‚ÑπÔ∏è –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã")
                return True  # –≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–µ –≤ –≥—Ä—É–ø–ø–µ
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}", exc_info=True)
            return False
        
        # –®–∞–≥ 3: –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüóëÔ∏è –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {user_email} –∏–∑ {group_email}...")
        try:
            success = api_client.remove_group_member(group_email, user_email)
            
            if success:
                print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            else:
                print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
                return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}", exc_info=True)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            error_str = str(e).lower()
            if "404" in error_str or "not found" in error_str:
                print("üîç –ê–Ω–∞–ª–∏–∑: –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–µ –≤ –≥—Ä—É–ø–ø–µ")
                return True
            elif "403" in error_str or "forbidden" in error_str:
                print("üîç –ê–Ω–∞–ª–∏–∑: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–º–µ–Ω–∞")
            elif "400" in error_str or "bad request" in error_str:
                print("üîç –ê–Ω–∞–ª–∏–∑: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å")
            
            return False
        
        # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è...")
        try:
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
            import time
            time.sleep(2)
            
            members_after = api_client.get_group_members(group_email)
            user_still_in_group = any(
                member.get('email', '').lower() == user_email.lower() 
                for member in members_after
            )
            
            if user_still_in_group:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ –µ—â–µ –≤ –≥—Ä—É–ø–ø–µ")
                return False
            else:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã")
                print(f"üìä –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ —Ç–µ–ø–µ—Ä—å: {len(members_after)}")
                return True
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {e}")
            # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –æ—Å–Ω–æ–≤–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –º–æ–≥–ª–∞ –ø—Ä–æ–π—Ç–∏ —É—Å–ø–µ—à–Ω–æ
            return True
    
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –£–î–ê–õ–ï–ù–ò–Ø testdecember2023@sputnik8.com")
    print("    –∏–∑ –≥—Ä—É–ø–ø—ã admin_team@sputnik8.com")
    print("=" * 60)
    
    success = asyncio.run(direct_removal_test())
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û")
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —É–∂–µ –Ω–µ –±—ã–ª –≤ –Ω–µ–π")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù")
        print("–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    print("=" * 60)


if __name__ == "__main__":
    main()
