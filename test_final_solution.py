#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è OAuth scopes
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
1. –ó–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (176)
2. –î–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º (–±–µ–∑ –æ—à–∏–±–∫–∏ 403)
3. –†–∞–±–æ—Ç—É –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π API
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.auth import get_service
from src.config.enhanced_config import config

def test_all_functionality():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è OAuth scopes"""
    print("üîß –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç Admin Team Tools v2.0.7")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º scopes
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º OAuth scopes:")
    for i, scope in enumerate(config.google.scopes, 1):
        print(f"  {i}. {scope}")
    print()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
        print("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Admin SDK...")
        service = get_service()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç 1: –î–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º
        print("\nüè¢ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º...")
        try:
            domains_result = service.domains().list(customer='my_customer').execute()
            domains = domains_result.get('domains', [])
            
            if domains:
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–æ–º–µ–Ω—ã ({len(domains)}):")
                for domain in domains:
                    verified = "‚úì –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if domain.get('verified') else "‚ö† –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
                    print(f"  ‚Ä¢ {domain.get('domainName')} - {verified}")
            else:
                print("‚ö†Ô∏è –î–æ–º–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–º–µ–Ω–∞–º: {e}")
            if "403" in str(e):
                print("üí° –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ scope –≤—Å—ë –µ—â—ë –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ")
                return False
        
        # –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüë• –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        all_users = []
        next_page_token = None
        page_count = 0
        
        while True:
            page_count += 1
            request_params = {
                'customer': 'my_customer',
                'maxResults': 500,  # –ú–∞–∫—Å–∏–º—É–º –∑–∞ —Ä–∞–∑
                'orderBy': 'email'
            }
            
            if next_page_token:
                request_params['pageToken'] = next_page_token
            
            result = service.users().list(**request_params).execute()
            users = result.get('users', [])
            all_users.extend(users)
            
            print(f"  üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_count}: –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            next_page_token = result.get('nextPageToken')
            if not next_page_token:
                break
        
        print(f"‚úÖ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(all_users)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        kirill_user = None
        for user in all_users:
            if user.get('primaryEmail') == 'kirill.kropochev@sputnik8.com':
                kirill_user = user
                break
        
        if kirill_user:
            position = all_users.index(kirill_user) + 1
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å kirill.kropochev@sputnik8.com –Ω–∞–π–¥–µ–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {position}")
        else:
            print("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å kirill.kropochev@sputnik8.com –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã—Ö –∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüìä –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        if all_users:
            print(f"  ü•á –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {all_users[0].get('primaryEmail')}")
            if len(all_users) > 1:
                print(f"  ü•â –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {all_users[-1].get('primaryEmail')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
            emails = [user.get('primaryEmail') for user in all_users[:10]]
            is_sorted = all(emails[i] <= emails[i+1] for i in range(len(emails)-1))
            print(f"  üìù –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ email: {'‚úÖ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è' if is_sorted else '‚ùå –Ω–∞—Ä—É—à–µ–Ω–∞'}")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–º –µ–¥–∏–Ω–∏—Ü–∞–º
        print("\nüèóÔ∏è –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–º –µ–¥–∏–Ω–∏—Ü–∞–º...")
        try:
            orgunits_result = service.orgunits().list(customerId='my_customer').execute()
            orgunits = orgunits_result.get('organizationUnits', [])
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü: {len(orgunits)}")
            
            for orgunit in orgunits[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  ‚Ä¢ {orgunit.get('name')} ({orgunit.get('orgUnitPath')})")
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–º –µ–¥–∏–Ω–∏—Ü–∞–º: {e}")
        
        print("\n" + "=" * 60)
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"  ‚Ä¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(all_users)}")
        print(f"  ‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º: —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"  ‚Ä¢ OAuth scopes: —Ä–∞—Å—à–∏—Ä–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print(f"  ‚Ä¢ –û—à–∏–±–∫–∞ 403: —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_all_functionality()
    
    if success:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–µ–Ω—ã! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è.")
