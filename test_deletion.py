#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è SPUTNIK
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from src.api.sputnik_calendar import SputnikCalendarManager
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_delete_user():
    """–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    calendar_manager = SputnikCalendarManager()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API
    if not calendar_manager.calendar_api.authenticate():
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google Calendar API")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    logger.info("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...")
    members = calendar_manager.get_members()
    
    if not members:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        return False
    
    logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(members)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    
    # –ò—â–µ–º test.0307@sputnik8.com
    test_email = "test.0307@sputnik8.com"
    test_user = None
    
    for member in members:
        if member.email.lower() == test_email.lower():
            test_user = member
            break
    
    if not test_user:
        logger.warning(f"‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
        logger.info("üìù –ü–µ—Ä–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:")
        for i, member in enumerate(members[:5]):
            logger.info(f"  {i+1}. {member.email} - {member.role}")
        return False
    
    logger.info(f"üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.email} ({test_user.role})")
    
    # –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    logger.info(f"üóëÔ∏è  –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_email}...")
    success = calendar_manager.remove_member(test_email)
    
    if success:
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_email} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...")
        updated_members = calendar_manager.get_members()
        
        still_exists = any(m.email.lower() == test_email.lower() for m in updated_members)
        
        if not still_exists:
            logger.info(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_email} –±–æ–ª—å—à–µ –Ω–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ")
            logger.info(f"üìä –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ–π—á–∞—Å: {len(updated_members)}")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_email} –≤—Å–µ –µ—â–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ")
            return False
    else:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_email}")
        return False
    
    return True

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è SPUTNIK")
    print("=" * 60)
    
    try:
        success = test_delete_user()
        if success:
            print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
