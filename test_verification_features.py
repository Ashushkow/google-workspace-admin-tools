#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥—Ä—É–ø–ø
"""

import sys
import os
import asyncio
import tracemalloc
from pathlib import Path

# –í–∫–ª—é—á–∞–µ–º tracemalloc –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
tracemalloc.start()

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

try:
    from src.utils.group_verification import GroupChangeVerifier, GroupOperationMonitor
    from src.api.google_api_client import GoogleAPIClient
    from src.config.enhanced_config import config
    import logging
    
    logger = logging.getLogger(__name__)
    
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤...")


async def test_verification_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò")
    print("=" * 80)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_group_email = "test-group@example.com"
    test_member_email = "test-member@example.com"
    
    print(f"üìß –¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞: {test_group_email}")
    print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: {test_member_email}")
    
    try:
        # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
        print("\nüß™ –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ü–∏–π")
        monitor = GroupOperationMonitor()
        print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç 2: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–µ—Ä–∞—Ü–∏–∏
        print("\nüß™ –¢–µ—Å—Ç 2: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏")
        import time
        
        with monitor.time_operation("test_operation", test_group_email, test_member_email):
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
            time.sleep(1)
        
        stats = monitor.get_average_times()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π: {stats}")
        
        recent = monitor.get_recent_operations(5)
        print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: {len(recent)}")
        
        # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ API –∫–ª–∏–µ–Ω—Ç–∞ –∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
        print("\nüß™ –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞")
        api_client = GoogleAPIClient(config.settings.google_application_credentials)
        verifier = GroupChangeVerifier(api_client)
        print("‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
        print("\nüß™ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞")
        has_verify_removal = hasattr(verifier, 'verify_member_removal')
        has_verify_addition = hasattr(verifier, 'verify_member_addition')
        has_propagation_status = hasattr(verifier, 'get_propagation_status')
        
        print(f"üìä –ú–µ—Ç–æ–¥ verify_member_removal: {'‚úÖ –ï—Å—Ç—å' if has_verify_removal else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        print(f"üìä –ú–µ—Ç–æ–¥ verify_member_addition: {'‚úÖ –ï—Å—Ç—å' if has_verify_addition else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        print(f"üìä –ú–µ—Ç–æ–¥ get_propagation_status: {'‚úÖ –ï—Å—Ç—å' if has_propagation_status else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        
        if has_verify_removal and has_verify_addition and has_propagation_status:
            print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç–æ–¥—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ!")
        else:
            print("‚ùå –ù–µ –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False


def analyze_new_features():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    
    print("\nüîç –ê–ù–ê–õ–ò–ó –î–û–ë–ê–í–õ–ï–ù–ù–´–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    verification_file = Path(__file__).parent / 'src' / 'utils' / 'group_verification.py'
    
    if verification_file.exists():
        with open(verification_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print("üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º group_verification.py:")
        
        features = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª–∞—Å—Å–æ–≤
        if 'class GroupChangeVerifier' in content:
            features.append("‚úÖ –ö–ª–∞—Å—Å GroupChangeVerifier –¥–æ–±–∞–≤–ª–µ–Ω")
        
        if 'class GroupOperationMonitor' in content:
            features.append("‚úÖ –ö–ª–∞—Å—Å GroupOperationMonitor –¥–æ–±–∞–≤–ª–µ–Ω")
        
        if 'class OperationTiming' in content:
            features.append("‚úÖ –ö–ª–∞—Å—Å OperationTiming –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã
        methods = [
            'verify_member_removal',
            'verify_member_addition',
            'get_propagation_status',
            'time_operation',
            'get_average_times'
        ]
        
        for method in methods:
            if f'def {method}' in content:
                features.append(f"‚úÖ –ú–µ—Ç–æ–¥ {method} —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω")
            else:
                features.append(f"‚ùå –ú–µ—Ç–æ–¥ {method} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        for feature in features:
            print(f"  {feature}")
    
    else:
        print("‚ùå –§–∞–π–ª group_verification.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    repo_file = Path(__file__).parent / 'src' / 'repositories' / 'google_api_repository.py'
    
    if repo_file.exists():
        with open(repo_file, 'r', encoding='utf-8') as f:
            repo_content = f.read()
        
        print("\nüìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ google_api_repository.py:")
        
        repo_features = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        if 'from ..utils.group_verification import' in repo_content:
            repo_features.append("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä verify –≤ –º–µ—Ç–æ–¥–∞—Ö
        if 'verify: bool = True' in repo_content:
            repo_features.append("‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä verify –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–µ—Ç–æ–¥—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞
        if 'self.monitor.time_operation' in repo_content:
            repo_features.append("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–µ—Ä–∞—Ü–∏–π –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
        if 'self.verifier.verify_member' in repo_content:
            repo_features.append("‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        
        for feature in repo_features:
            print(f"  {feature}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    print("=" * 80)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    analyze_new_features()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    try:
        asyncio.run(test_verification_functionality())
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}")
    
    print("\n" + "=" * 80)
    print("üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("1. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–æ–¥—É–ª—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö")
    print("2. ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π") 
    print("3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏")
    print("4. ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    print("\nüéâ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –î–û–ë–ê–í–õ–ï–ù–ê!")
    print("\nüìã –í–†–ï–ú–Ø –û–¢–†–ê–ñ–ï–ù–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–ô:")
    print("   ‚Ä¢ API –≤—ã–∑–æ–≤: 0.5-2 —Å–µ–∫—É–Ω–¥—ã")
    print("   ‚Ä¢ Admin Console: 5-30 —Å–µ–∫—É–Ω–¥")
    print("   ‚Ä¢ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: 2-10 –º–∏–Ω—É—Ç")
    print("=" * 80)


if __name__ == "__main__":
    main()
