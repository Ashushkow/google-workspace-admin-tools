#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–∞—Ö –ø–æ—Å–ª–µ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
"""

import os
import re
from pathlib import Path

def fix_imports_in_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å
        if 'sys.path.insert(0, str(Path(__file__).parent.parent.parent))' in content:
            print(f"‚úÖ {file_path.name} - –∏–º–ø–æ—Ä—Ç—ã —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
            return True
            
        # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–∏
        pattern = r'sys\.path\.insert\(0, str\(Path\(__file__\)\.parent\)\)'
        if re.search(pattern, content):
            # –ó–∞–º–µ–Ω—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
            content = re.sub(
                pattern, 
                'sys.path.insert(0, str(Path(__file__).parent.parent.parent))', 
                content
            )
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤ sys –∏ os
            insert_pos = content.find('from pathlib import Path')
            if insert_pos == -1:
                insert_pos = content.find('import os')
                if insert_pos == -1:
                    print(f"‚ùå {file_path.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –ø—É—Ç–∏")
                    return False
            
            # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏
            end_pos = content.find('\n', insert_pos)
            if end_pos == -1:
                end_pos = len(content)
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–∏
            path_code = '\n\n# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞\nsys.path.insert(0, str(Path(__file__).parent.parent.parent))\n'
            content = content[:end_pos] + path_code + content[end_pos:]
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
        print(f"‚úÖ {file_path.name} - –∏–º–ø–æ—Ä—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå {file_path.name} - –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–∞—Ö...")
    print("=" * 50)
    
    manual_tests_dir = Path(__file__).parent.parent / 'tests' / 'manual'
    
    if not manual_tests_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ tests/manual –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Python —Ñ–∞–π–ª—ã —Ç–µ—Å—Ç–æ–≤
    test_files = list(manual_tests_dir.glob('test_*.py'))
    
    if not test_files:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")
        return
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(test_files)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")
    print()
    
    success_count = 0
    for test_file in test_files:
        if fix_imports_in_file(test_file):
            success_count += 1
    
    print()
    print("=" * 50)
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {success_count}/{len(test_files)} —Ñ–∞–π–ª–æ–≤")
    print("üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
