#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Admin Team Tools.
–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ Google Workspace.
"""

import sys
import os
import logging
import tkinter as tk
from tkinter import messagebox

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('error.log'),
        logging.StreamHandler()
    ]
)

def check_credentials():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ credentials.json"""
    credentials_path = 'credentials.json'
    if not os.path.exists(credentials_path):
        messagebox.showerror(
            "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç credentials.json",
            "–§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞.\n\n"
            "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è OAuth 2.0 credentials:\n"
            "1. –û—Ç–∫—Ä–æ–π—Ç–µ docs/OAUTH2_SETUP.md\n"
            "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console\n"
            "3. –°–æ–∑–¥–∞–π—Ç–µ OAuth 2.0 Client ID (Desktop application)\n"
            "4. –°–∫–∞—á–∞–π—Ç–µ credentials.json\n"
            "5. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞\n\n"
            "üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/OAUTH2_SETUP.md"
        )
        return False
    return True

def run_application():
    """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ credentials.json
    if not check_credentials():
        sys.exit(1)
        
    try:
        # –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        from src.auth import get_service
        from src.ui.main_window import AdminToolsMainWindow
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        root = AdminToolsMainWindow()
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        try:
            service = get_service()
            root.service = service
            root.check_service_status()
        except FileNotFoundError as e:
            logging.exception("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            messagebox.showerror(
                "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω", 
                f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ–∞–π–ª:\n{str(e)}\n\n"
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª credentials.json –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞."
            )
            sys.exit(1)
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            error_msg = str(e)
            if "DOMAIN_ADMIN_EMAIL" in error_msg:
                messagebox.showerror(
                    "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Service Account", 
                    f"{error_msg}\n\n"
                    "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/SERVICE_ACCOUNT_SETUP.md"
                )
            elif "insufficient permissions" in error_msg.lower() or "delegat" in error_msg.lower():
                messagebox.showerror(
                    "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞", 
                    f"–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∞–º–∏ Service Account:\n{error_msg}\n\n"
                    "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Domain-wide delegation.\n"
                    "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/SERVICE_ACCOUNT_SETUP.md"
                )
            elif "credentials" in error_msg.lower():
                messagebox.showerror(
                    "–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", 
                    f"–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∞–π–ª–æ–º credentials.json:\n{error_msg}\n\n"
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google API –≤ docs/API_SETUP.md"
                )
            else:
                messagebox.showerror(
                    "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", 
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google API:\n{error_msg}\n\n"
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
                    "‚Ä¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n"
                    "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google API\n"
                    "‚Ä¢ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                    "‚Ä¢ Domain-wide delegation (–¥–ª—è Service Account)"
                )
            sys.exit(1)
        
        # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
        root.mainloop()
        
    except ImportError as e:
        logging.exception("–û—à–∏–±–∫–∞ –º–æ–¥—É–ª–µ–π")
        messagebox.showerror(
            "–û—à–∏–±–∫–∞ –º–æ–¥—É–ª–µ–π", 
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏:\n{str(e)}\n\n"
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
        )
        sys.exit(1)
    except Exception as e:
        logging.exception("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")
        messagebox.showerror(
            "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", 
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:\n{str(e)}"
        )
        sys.exit(1)

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    run_application()
