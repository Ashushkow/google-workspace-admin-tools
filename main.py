#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Admin Team Tools v2.2.0 - Google Workspace Management
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: OAuth 2.0 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
"""

import sys
import os
import asyncio
import tracemalloc
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
try:
    # –î–ª—è Windows –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UTF-8 output
    if os.name == 'nt':
        import codecs
        sys.stdout = codecs.getwriter('utf-8')(sys.stdout.detach())
        sys.stderr = codecs.getwriter('utf-8')(sys.stderr.detach())
except Exception:
    # –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ—ë
    pass

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path —Å—Ä–∞–∑—É
sys.path.insert(0, str(Path(__file__).parent / 'src'))

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
try:
    from src.config.enhanced_config import config
    
    print("[*] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    if config.is_first_run():
        print("[>] –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º GUI –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        from src.config.setup_wizard import run_setup_wizard
        
        setup_result = run_setup_wizard()
        if setup_result is None:
            print("[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫—É
            sys.exit(1)
            
        domain, admin_email = setup_result
        print(f"[+] –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {domain}, {admin_email}")
        config.create_initial_config(domain, admin_email)
        print("[+] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    else:
        print("[+] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫...")
        
except Exception as e:
    print(f"[!] –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    import traceback
    traceback.print_exc()
    
    # –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ tkinter
    try:
        import tkinter as tk
        from tkinter import messagebox
        
        root = tk.Tk()
        root.withdraw()
        
        messagebox.showerror(
            "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", 
            f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}\n\n"
            f"–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã:\n"
            f"1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏\n"
            f"2. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é SKIP_CONFIG_VALIDATION=True\n\n"
            f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ —Ñ–∞–π–ª–µ QUICK_CONFIG_FIX.md"
        )
        root.destroy()
    except:
        # –ï—Å–ª–∏ –∏ GUI –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"[!] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        print("[i] –°–º. —Ñ–∞–π–ª QUICK_CONFIG_FIX.md –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã")
    
    sys.exit(1)

# –í–∫–ª—é—á–∞–µ–º tracemalloc —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–∏/DEV
try:
    if config.settings.profiling_enabled or config.settings.app_debug or os.getenv('DEV_MODE', 'False').lower() == 'true':
        tracemalloc.start()
except Exception:
    # –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if os.getenv('DEV_MODE', 'False').lower() == 'true' or os.getenv('PROFILING_ENABLED', 'False').lower() == 'true':
        tracemalloc.start()

def show_startup_banner():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–Ω–Ω–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± OAuth 2.0"""
    print("=" * 70)
    print("üöÄ ADMIN TEAM TOOLS v2.2.0")
    print("üìä Google Workspace Management System")
    print("=" * 70)
    print("üîê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: OAuth 2.0 (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è)")
    print("üîß –ó–∞–ø–∞—Å–Ω–æ–π –º–µ—Ç–æ–¥: Service Account (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π)")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ credentials
    credentials_path = Path(config.settings.google_application_credentials)
    if credentials_path.exists():
        try:
            import json
            with open(credentials_path, 'r', encoding='utf-8') as f:
                creds_data = json.load(f)
            
            if 'installed' in creds_data:
                print("[+] OAuth 2.0 credentials –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
                print("[>] –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            elif 'type' in creds_data and creds_data['type'] == 'service_account':
                print("[+] Service Account credentials –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
                print("[>] –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            else:
                print("[!] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç", credentials_path)
        except Exception:
            print("[!] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è", credentials_path)
    else:
        print("[!]", credentials_path, "–Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("[i] –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–º.: docs/OAUTH2_PRIORITY_SETUP.md")
    
    print("=" * 70)
    print()


async def main() -> int:
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    Returns:
        –ö–æ–¥ –≤—ã—Ö–æ–¥–∞
    """
    try:
        from src.core.application import Application
        from src.utils.enhanced_logger import setup_logging
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
        try:
            app = Application()
            return await app.start()
        except Exception as app_error:
            print(f"[!] –û—à–∏–±–∫–∞ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: {app_error}")
            print("[>] –ó–∞–ø—É—Å–∫ GUI –Ω–∞–ø—Ä—è–º—É—é...")
            
            # Fallback - –∑–∞–ø—É—Å–∫ GUI –Ω–∞–ø—Ä—è–º—É—é
            return await _fallback_gui_start()
            
    except KeyboardInterrupt:
        print("\n[*] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0
    except Exception as e:
        print(f"[!] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1

async def _fallback_gui_start() -> int:
    """–ó–∞–ø—É—Å–∫ GUI –Ω–∞–ø—Ä—è–º—É—é –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"""
    try:
        print("[>] –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ GUI...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from src.ui.main_window import AdminToolsMainWindow
        from src.api.service_adapter import ServiceAdapter
        from src.services.user_service import UserService
        from src.services.group_service import GroupService
        
        # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
        user_service = UserService(None)  # –ü–µ—Ä–µ–¥–∞–µ–º None –∫–∞–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        group_service = GroupService(None)  # –ü–µ—Ä–µ–¥–∞–µ–º None –∫–∞–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä
        service_adapter = ServiceAdapter(user_service, group_service)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º GUI
        gui_app = AdminToolsMainWindow(service=service_adapter)
        gui_app.mainloop()
        
        return 0
        
    except Exception as fallback_error:
        print(f"[!] –û—à–∏–±–∫–∞ fallback –∑–∞–ø—É—Å–∫–∞: {fallback_error}")
        
        # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - —Å—Ç–∞—Ä—ã–π –∫–æ–¥ –±–µ–∑ –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        try:
            print("[>] –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –ø—Ä–æ—Å—Ç–æ–π GUI...")
            from src.ui.main_window import AdminToolsMainWindow
            
            gui_app = AdminToolsMainWindow(service=None)
            gui_app.mainloop()
            return 0
            
        except Exception as final_error:
            print(f"[!] –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å: {final_error}")
            return 1


def cli_main():
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        show_startup_banner()
        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        return asyncio.run(main())
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1


if __name__ == "__main__":
    exit_code = cli_main()
    sys.exit(exit_code)
