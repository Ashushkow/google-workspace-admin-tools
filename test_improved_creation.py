#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å retry –ª–æ–≥–∏–∫–æ–π
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

try:
    from src.auth import get_service
    from src.api.users_api import create_user, user_exists
    
    print("üß™ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ô –§–£–ù–ö–¶–ò–ò –°–û–ó–î–ê–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 60)
    
    service = get_service()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–æ–≤—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏
    test_emails = [
        "test.retry.logic1@sputnik8.com",
        "test.retry.logic2@sputnik8.com"
    ]
    
    for i, test_email in enumerate(test_emails, 1):
        print(f"\\n{i}. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è: {test_email}")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        exists = user_exists(service, test_email) 
        print(f"   üìä user_exists: {exists}")
        
        if exists is False:
            print("   üöÄ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π...")
            
            result = create_user(
                service=service,
                email=test_email,
                first_name="Test",
                last_name="Retry",
                password="RetryTest123!",
                org_unit_path="/"
            )
            
            print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
            if "—Å–æ–∑–¥–∞–Ω" in result.lower():
                print("   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            elif "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ" in result:
                print("   ‚ùå –û—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç")
            elif "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" in result:
                print("   üîÑ –°—Ä–∞–±–æ—Ç–∞–ª–∞ –ª–æ–≥–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
            else:
                print(f"   ‚ÑπÔ∏è –î—Ä—É–≥–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        else:
            print("   ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    print("\\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    
    print("\\nüí° –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –í–°–ï –ï–©–ï –í–û–ó–ù–ò–ö–ê–ï–¢ –í GUI:")
    print("   1. –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º email")
    print("   2. –ò—Å—Ç–µ—á–µ–Ω–∏–µ OAuth —Ç–æ–∫–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã")
    print("   3. –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –∫–≤–æ—Ç Google API")
    print("   4. –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")
    print()
    print("üõ†Ô∏è –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø:")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ retry –ª–æ–≥–∏–∫–∞ –≤ user_exists (3 –ø–æ–ø—ã—Ç–∫–∏)")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –≤ create_user")
    print("   ‚úÖ –£–ª—É—á—à–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
