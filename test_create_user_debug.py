#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

try:
    from src.auth import get_service
    from src.api.users_api import create_user, user_exists
    
    print("üß™ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ Google API —Å–µ—Ä–≤–∏—Å–∞...")
    service = get_service()
    
    if not service:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å")
        exit(1)
    
    print("‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_email = "test.debug.user.creation@sputnik8.com"
    first_name = "Test"
    last_name = "User"
    password = "TestPassword123!"
    
    print(f"\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_email}")
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
    print("   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    exists = user_exists(service, test_email)
    print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç user_exists: {exists} (—Ç–∏–ø: {type(exists)})")
    
    if exists is None:
        print("   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: user_exists –≤–µ—Ä–Ω—É–ª None!")
        print("   üîß –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –æ—à–∏–±–∫—É –≤ API –∑–∞–ø—Ä–æ—Å–µ")
        exit(1)
    elif exists is True:
        print("   ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª–∏–º –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞...")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —É–¥–∞–ª–µ–Ω–∏—è, –Ω–æ –ø–æ–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–º
        print("   (–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
        exit(0)
    else:
        print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å")
    
    # –¢–µ–ø–µ—Ä—å –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n   üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    result = create_user(
        service=service,
        email=test_email,
        first_name=first_name,
        last_name=last_name,
        password=password,
        org_unit_path="/"
    )
    
    print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è: {result}")
    
    if "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" in result:
        print("   ‚ùå –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ê –û–®–ò–ë–ö–ê!")
        print("   üîç –ù–∞—á–∏–Ω–∞–µ–º —É–≥–ª—É–±–ª–µ–Ω–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É...")
        
        # –ü–æ–≤—Ç–æ—Ä–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        print("\n3. –£–≥–ª—É–±–ª–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ user_exists...")
        
        import traceback
        
        try:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π API –≤—ã–∑–æ–≤
            print("   üîß –ü—Ä—è–º–æ–π API –≤—ã–∑–æ–≤ users().get()...")
            user_info = service.users().get(userKey=test_email).execute()
            print(f"   üìä –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω! {user_info.get('primaryEmail')}")
        except Exception as e:
            print(f"   üìä –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞: {e}")
            print(f"   üìä –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
            
            # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏
            if hasattr(e, 'resp'):
                print(f"   üìä HTTP —Å—Ç–∞—Ç—É—Å: {getattr(e.resp, 'status', 'N/A')}")
            
            if 'notFound' in str(e) or '404' in str(e):
                print("   ‚úÖ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ 'not found'")
            else:
                print("   ‚ö†Ô∏è –≠—Ç–æ –ù–ï —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ 'not found'")
                print("   üîß –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ:")
                traceback.print_exc()
    else:
        print("   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫—É, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å...")
        
        if "—Å–æ–∑–¥–∞–Ω" in result.lower():
            print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
    import traceback
    traceback.print_exc()
