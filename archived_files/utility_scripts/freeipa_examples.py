#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FreeIPA –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / 'src'))


async def example_freeipa_usage():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FreeIPA –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    
    print("üîó –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FreeIPA –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    print("   python test_cli.py check-dependencies")
    
    # –ü—Ä–∏–º–µ—Ä 2: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print("   python test_cli.py create-config")
    print("   # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/freeipa_config.json")
    
    # –ü—Ä–∏–º–µ—Ä 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
    print("   python test_cli.py test-connection")
    
    # –ü—Ä–∏–º–µ—Ä 4: –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("""
# –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
from src.services.freeipa_client import FreeIPAConfig, FreeIPAService

config = FreeIPAConfig.from_file('config/freeipa_config.json')
service = FreeIPAService(config)

if service.connect():
    users = service.list_users(limit=10)
    print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    service.disconnect()
""")
    
    # –ü—Ä–∏–º–µ—Ä 5: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Workspace
    print("\n5Ô∏è‚É£ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Workspace:")
    print("""
# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from src.integrations.freeipa_integration import setup_freeipa_integration

integration = await setup_freeipa_integration(user_service, group_service)
if integration:
    await integration.sync_user_to_freeipa('user@example.com', ['employees'])
    await integration.disconnect()
""")
    
    # –ü—Ä–∏–º–µ—Ä 6: CLI –∫–æ–º–∞–Ω–¥—ã (–ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏)
    print("\n6Ô∏è‚É£ CLI –∫–æ–º–∞–Ω–¥—ã (–ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ python-freeipa):")
    print("   python main.py freeipa stats")
    print("   python main.py freeipa sync-user user@example.com --groups employees")
    print("   python main.py freeipa sync-all-users --domain example.com")
    print("   python main.py freeipa create-group developers")
    print("   python main.py freeipa compare-users")
    
    # –ü—Ä–∏–º–µ—Ä 7: –ú–∞—Å—Å–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    print("\n7Ô∏è‚É£ –ú–∞—Å—Å–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:")
    print("""
# –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
1. python main.py freeipa sync-groups --domain example.com
2. python main.py freeipa sync-all-users --domain example.com --groups employees
3. python main.py freeipa compare-users --domain example.com
""")
    
    print("\nüìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print("   docs/FREEIPA_INTEGRATION_GUIDE.md - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ")
    print("   FREEIPA_QUICKSTART.md - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
    print("   FREEIPA_IMPLEMENTATION_REPORT.md - –û—Ç—á–µ—Ç –æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏")


def show_current_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    
    print("\nüìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å FreeIPA –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    files_to_check = [
        "src/services/freeipa_client.py",
        "src/integrations/freeipa_integration.py", 
        "src/cli/freeipa_simple.py",
        "config/freeipa_config.json",
        "docs/FREEIPA_INTEGRATION_GUIDE.md",
        "test_freeipa_integration.py"
    ]
    
    print("\n‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for file_path in files_to_check:
        if Path(file_path).exists():
            print(f"   ‚úÖ {file_path}")
        else:
            print(f"   ‚ùå {file_path}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    
    try:
        import click
        print("   ‚úÖ click - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   ‚ùå click - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    try:
        import requests
        print("   ‚úÖ requests - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   ‚ùå requests - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
    try:
        import python_freeipa
        print("   ‚úÖ python-freeipa - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   ‚ö†Ô∏è  python-freeipa - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏)")
        
    try:
        import requests_kerberos
        print("   ‚úÖ requests-kerberos - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   ‚ö†Ô∏è  requests-kerberos - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è Kerberos)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    config_path = Path("config/freeipa_config.json")
    if config_path.exists():
        print("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        print("   üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/freeipa_config.json —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    else:
        print("   ‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
        print("   üìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_cli.py create-config")
    
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    if not config_path.exists():
        print("   1. –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: python test_cli.py create-config")
        print("   2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/freeipa_config.json")
        print("   3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install python-freeipa requests-kerberos")
        print("   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python test_cli.py test-connection")
    else:
        print("   1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/freeipa_config.json —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install python-freeipa requests-kerberos")
        print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python test_cli.py test-connection")
        print("   4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python main.py freeipa --help")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ FreeIPA Integration Examples")
    print("=" * 60)
    
    await example_freeipa_usage()
    show_current_status()
    
    print("\n" + "=" * 60)
    print("‚ú® FreeIPA –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")


if __name__ == "__main__":
    asyncio.run(main())
