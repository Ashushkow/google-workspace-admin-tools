#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è OAuth 2.0 –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import sys
import os
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

from src.config.enhanced_config import config
from src.api.google_api_client import GoogleAPIClient
from src.utils.enhanced_logger import setup_logging


async def test_oauth_users():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ OAuth 2.0"""
    print("=" * 60)
    print("üß™ –¢–ï–°–¢ –ó–ê–ì–†–£–ó–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ß–ï–†–ï–ó OAUTH 2.0")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger = setup_logging("DEBUG")
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
        settings = config.settings
        print(f"   –î–æ–º–µ–Ω: {settings.google_workspace_domain}")
        print(f"   –ê–¥–º–∏–Ω: {settings.google_workspace_admin}")
        print(f"   –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: {os.getenv('DEV_MODE', 'False')}")
        print(f"   Credentials: {settings.google_application_credentials}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ credentials
        creds_path = Path(settings.google_application_credentials)
        if not creds_path.exists():
            print(f"‚ùå –§–∞–π–ª credentials –Ω–µ –Ω–∞–π–¥–µ–Ω: {creds_path}")
            return
        print("‚úÖ –§–∞–π–ª credentials –Ω–∞–π–¥–µ–Ω")
        
        # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google API –∫–ª–∏–µ–Ω—Ç–∞
        print("\\nüîë –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google API –∫–ª–∏–µ–Ω—Ç...")
        client = GoogleAPIClient(settings.google_application_credentials)
        
        if not client.initialize():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google API –∫–ª–∏–µ–Ω—Ç")
            return
        print("‚úÖ Google API –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # 4. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
        if not await client.test_connection():
            print("‚ùå –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ—É—Å–ø–µ—à–µ–Ω")
            return
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\\nüë• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        users = client.get_users(max_results=10)
        
        if not users:
            print("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
            return
            
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        for i, user in enumerate(users[:5], 1):
            email = user.get('primaryEmail', 'N/A')
            name = user.get('name', {}).get('fullName', 'N/A')
            print(f"   {i}. {email} ({name})")
        
        if len(users) > 5:
            print(f"   ... –∏ –µ—â–µ {len(users) - 5} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # 6. –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π API
        print("\\nüèóÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π API...")
        try:
            from src.auth import get_service, detect_credentials_type
            
            creds_type = detect_credentials_type()
            print(f"üìÑ –¢–∏–ø credentials: {creds_type}")
            
            if creds_type == 'oauth2':
                service = get_service()
                result = service.users().list(customer='my_customer', maxResults=3).execute()
                old_users = result.get('users', [])
                print(f"‚úÖ –ß–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π API –ø–æ–ª—É—á–µ–Ω–æ {len(old_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            else:
                print("‚ö†Ô∏è Credentials –Ω–µ OAuth 2.0, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å—Ç–∞—Ä–æ–≥–æ API")
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ API: {e}")
        
        print("\\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}", exc_info=True)
        return False


async def test_oauth_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º OAuth 2.0 flow –æ—Ç–¥–µ–ª—å–Ω–æ"""
    print("\\n" + "=" * 60)
    print("üîê –¢–ï–°–¢ OAUTH 2.0 FLOW")
    print("=" * 60)
    
    try:
        from src.auth import get_service, detect_credentials_type
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø credentials
        creds_type = detect_credentials_type()
        print(f"üìÑ –¢–∏–ø credentials: {creds_type}")
        
        if creds_type != 'oauth2':
            print("‚ö†Ô∏è –§–∞–π–ª credentials –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç OAuth 2.0 –¥–∞–Ω–Ω—ã–µ")
            return False
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å
        print("üîß –ü–æ–ª—É—á–∞–µ–º Google API —Å–µ—Ä–≤–∏—Å...")
        service = get_service()
        
        if not service:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Google API —Å–µ—Ä–≤–∏—Å")
            return False
        
        print("‚úÖ Google API —Å–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π API
        print("üë• –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π API...")
        result = service.users().list(customer='my_customer', maxResults=5).execute()
        users = result.get('users', [])
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π API")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OAuth 2.0 flow: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è OAuth 2.0...")
    
    try:
        # –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ API
        success1 = asyncio.run(test_oauth_users())
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ä–æ–≥–æ API –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        success2 = asyncio.run(test_oauth_flow())
        
        if success1 and success2:
            print("\\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
            print("OAuth 2.0 –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        else:
            print("\\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º.")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
