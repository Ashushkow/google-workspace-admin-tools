name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📋 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: 🧪 Run tests
      run: |
        pytest tests/ --cov=src/ --cov-report=xml

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    name: 🔍 Lint
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📋 Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy

    - name: 🖤 Check code formatting with Black
      run: black --check src/ tests/

    - name: 📦 Check import sorting with isort
      run: isort --check-only src/ tests/

    - name: 🔍 Lint with flake8
      run: flake8 src/ tests/

    - name: 🔒 Type checking with mypy
      run: mypy src/

  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 🛡️ Run security scan with bandit
      run: |
        pip install bandit
        bandit -r src/

    - name: 🔍 Check for known vulnerabilities
      run: |
        pip install safety
        safety check --requirements requirements.txt