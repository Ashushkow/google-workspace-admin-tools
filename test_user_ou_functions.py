#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ OU.
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

from src.api.orgunits_api import (
    list_orgunits, 
    get_user_orgunit, 
    get_display_name_for_orgunit_path,
    get_orgunit_path_from_display_name
)
from src.api.users_api import get_user_list
from src.auth import get_service


def get_users_direct(service):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Google API"""
    try:
        results = service.users().list(customer='my_customer', maxResults=50).execute()
        return results.get('users', [])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return []


def test_user_ou_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ OU"""
    try:
        print("üîß –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ Google Directory API...")
        service = get_service()
        print(f"üîç –¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞: {type(service)}")
        
        print("üìã –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        users = get_users_direct(service)
        print(f"üîç –¢–∏–ø users: {type(users)}")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        print("\nüìã –ó–∞–≥—Ä—É–∑–∫–∞ OU...")
        orgunits = list_orgunits(service)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(orgunits)} –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–µ—Ä–≤—ã–º–∏ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        print("\nüë• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ OU –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        for i, user in enumerate(users[:5]):
            email = user.get('primaryEmail', '')
            name = f"{user.get('name', {}).get('givenName', '')} {user.get('name', {}).get('familyName', '')}"
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º OU –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_ou_path = get_user_orgunit(service, email)
                
                # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ OU
                display_name = get_display_name_for_orgunit_path(user_ou_path, orgunits)
                
                print(f"  {i+1}. {name} ({email})")
                print(f"     üìÅ OU: {user_ou_path}")
                print(f"     üé® –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {display_name}")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
                back_to_path = get_orgunit_path_from_display_name(display_name, orgunits)
                match_status = "‚úÖ" if back_to_path == user_ou_path else "‚ùå"
                print(f"     üîÑ –û–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {back_to_path} {match_status}")
                
            except Exception as e:
                print(f"     ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            print()
        
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")


if __name__ == "__main__":
    test_user_ou_functions()
