#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö OU –≤–∫–ª—é—á–∞—è –¥–æ—á–µ—Ä–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

def test_ou_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö OU"""
    print("üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è –¥–æ—á–µ—Ä–Ω–∏–µ)")
    print("=" * 75)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from src.api.orgunits_api import list_orgunits, format_orgunits_for_combobox
        from src.auth import get_service
        
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
        print("üîë –ü–æ–ª—É—á–µ–Ω–∏–µ Google API —Å–µ—Ä–≤–∏—Å–∞...")
        service = get_service()
        print("‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ OU
        print("\nüìã –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π...")
        orgunits = list_orgunits(service)
        
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ OU: {len(orgunits)}")
        
        if not orgunits:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å OU. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   ‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ API")
            print("   ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç scope admin.directory.orgunit")
            print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º OU
        print("\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö OU:")
        print("-" * 75)
        
        for i, ou in enumerate(orgunits, 1):
            path = ou.get('orgUnitPath', 'N/A')
            name = ou.get('name', 'N/A')
            description = ou.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
            
            print(f"{i:2d}. –ü—É—Ç—å: {path}")
            print(f"    –ò–º—è: {name}")
            print(f"    –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
            print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è UI
        print("üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
        print("-" * 75)
        
        formatted = format_orgunits_for_combobox(orgunits)
        for i, formatted_name in enumerate(formatted, 1):
            print(f"{i:2d}. {formatted_name}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é
        print(f"\nüìà –ê–Ω–∞–ª–∏–∑ –∏–µ—Ä–∞—Ä—Ö–∏–∏:")
        print("-" * 75)
        
        levels = {}
        for ou in orgunits:
            path = ou.get('orgUnitPath', '/')
            level = path.count('/') - 1 if path != '/' else 0
            if level not in levels:
                levels[level] = []
            levels[level].append(ou.get('name', 'Unknown'))
        
        for level in sorted(levels.keys()):
            level_name = "–ö–æ—Ä–Ω–µ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å" if level == 0 else f"–£—Ä–æ–≤–µ–Ω—å {level}"
            ou_names = ", ".join(levels[level])
            print(f"  {level_name}: {ou_names}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö OU
        child_ous = [ou for ou in orgunits if ou.get('orgUnitPath', '/').count('/') > 1]
        
        if child_ous:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(child_ous)} –¥–æ—á–µ—Ä–Ω–∏—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π:")
            for ou in child_ous:
                print(f"  üè¢ {ou.get('name')} ({ou.get('orgUnitPath')})")
        else:
            print(f"\n‚ö†Ô∏è –î–æ—á–µ—Ä–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   ‚Ä¢ –í –¥–æ–º–µ–Ω–µ –Ω–µ—Ç –¥–æ—á–µ—Ä–Ω–∏—Ö OU")
            print("   ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä type='all' –≤ API –∑–∞–ø—Ä–æ—Å–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    test_ou_loading()
    
    print("\n" + "=" * 75)
    print("üîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏ OU:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä type='all' –≤ API –∑–∞–ø—Ä–æ—Å–µ")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ Service Account")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ scope admin.directory.orgunit")

if __name__ == "__main__":
    main()
