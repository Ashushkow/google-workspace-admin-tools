#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

def debug_api_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google API"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö GOOGLE API")
    print("=" * 60)
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
        print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π...")
        from src.auth import get_service, detect_credentials_type
        from src.api.users_api import user_exists
        print("   ‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø credentials
        print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ credentials...")
        creds_type = detect_credentials_type()
        print(f"   üìã –¢–∏–ø credentials: {creds_type}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
        print("\n3. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å Google API —Å–µ—Ä–≤–∏—Å...")
        service = get_service()
        if service:
            print("   ‚úÖ Google API —Å–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Google API —Å–µ—Ä–≤–∏—Å")
            return False
            
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π API –≤—ã–∑–æ–≤
        print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π API –≤—ã–∑–æ–≤...")
        try:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ–Ω–µ
            domains = service.domains().list(customer='my_customer').execute()
            print(f"   ‚úÖ API –≤—ã–∑–æ–≤ —É—Å–ø–µ—à–µ–Ω, –Ω–∞–π–¥–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤: {len(domains.get('domains', []))}")
            
            for domain in domains.get('domains', []):
                print(f"      ‚Ä¢ {domain.get('domainName')} (–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {domain.get('verified')})")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API –≤—ã–∑–æ–≤–∞: {e}")
            return False
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é user_exists —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        print("\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é user_exists...")
        test_email = "nonexistent.user.test123@sputnik8.com"
        print(f"   üìß –¢–µ—Å—Ç–æ–≤—ã–π email: {test_email}")
        
        try:
            result = user_exists(service, test_email)
            print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç user_exists: {result}")
            
            if result is None:
                print("   ‚ùå –§—É–Ω–∫—Ü–∏—è user_exists –≤–µ—Ä–Ω—É–ª–∞ None - –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å API")
                return False
            elif result is False:
                print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è user_exists —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω)")
            else:
                print("   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ user_exists: {e}")
            return False
        
        print("\n‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def debug_user_creation_error():
    """–°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\nüõ†Ô∏è –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò –°–û–ó–î–ê–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 60)
    
    try:
        from src.auth import get_service
        from src.api.users_api import user_exists, create_user
        
        service = get_service()
        if not service:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Google API —Å–µ—Ä–≤–∏—Å")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
        test_cases = [
            "test.nonexistent.user1@sputnik8.com",
            "another.test.user2@sputnik8.com", 
            "debug.user.test@sputnik8.com"
        ]
        
        for i, test_email in enumerate(test_cases, 1):
            print(f"\nüìß –¢–µ—Å—Ç {i}: {test_email}")
            
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
                exists = user_exists(service, test_email)
                print(f"   üîç user_exists —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {exists}")
                
                if exists is None:
                    print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞: user_exists –≤–µ—Ä–Ω—É–ª None –¥–ª—è {test_email}")
                    print("   üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                    print("      - –ü—Ä–æ–±–ª–µ–º–∞ —Å API —Ç–æ–∫–µ–Ω–æ–º/credentials")
                    print("      - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                    print("      - –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
                    print("      - –û—à–∏–±–∫–∞ –≤ Google API")
                    return False
                elif exists is True:
                    print(f"   ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_email} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {test_email}: {e}")
                return False
        
        print("\nüéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
        print("   –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:")
        print("   1. –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("   2. –í—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å Google API") 
        print("   3. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö –∫–≤–æ—Ç API")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –û–®–ò–ë–ö–ò –°–û–ó–î–ê–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 70)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    api_ok = debug_api_connection()
    
    if api_ok:
        # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        debug_user_creation_error()
    else:
        print("\n‚ùå –û–°–ù–û–í–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ù–ï –ü–†–û–ô–î–ï–ù–ê")
        print("   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
        
    print("\n" + "=" * 70)
    print("üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
