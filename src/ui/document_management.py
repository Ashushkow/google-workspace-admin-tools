#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–∫–Ω–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ Google –¥–æ–∫—É–º–µ–Ω—Ç–∞–º.
"""

import tkinter as tk
from tkinter import ttk, messagebox, simpledialog
import logging
from typing import Optional, List

from .ui_components import ModernColors, ModernButton, center_window
from ..services.document_service import DocumentAccessRequest


logger = logging.getLogger(__name__)


class DocumentManagementWindow:
    """–û–∫–Ω–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self, parent, document_service, document_url: str = None):
        self.parent = parent
        self.document_service = document_service
        self.current_document_url = document_url or "https://docs.google.com/document/d/1iXos0bTHv3nwXcYvAjPSIYzQOflcygwjj4LKD5Rftdk/edit#heading=h.mfzrrwzcspx2"
        self.current_doc_info = None
        
        self.window = tk.Toplevel(parent)
        self.window.title("üìÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º")
        self.window.geometry("700x550")  # –£–≤–µ–ª–∏—á–∏–ª–∏ –≤—ã—Å–æ—Ç—É —Å 500 –¥–æ 550
        self.window.configure(bg=ModernColors.BACKGROUND)
        self.window.transient(parent)
        self.window.grab_set()
        self.window.resizable(True, True)  # –î–µ–ª–∞–µ–º –æ–∫–Ω–æ –∏–∑–º–µ–Ω—è–µ–º—ã–º –ø–æ —Ä–∞–∑–º–µ—Ä—É
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        center_window(self.window, parent)
        
        self._create_widgets()
        self._setup_context_menu()
        self._setup_url_context_menu()  # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è URL
        self._setup_email_context_menu()  # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è Email
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if self.current_document_url:
            self.window.after(100, self._initialize_default_document)
    
    def _get_role_mapping(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–ø–ø–∏–Ω–≥ –º–µ–∂–¥—É –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ä–æ–ª–µ–π –∏ API –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"""
        return {
            "Viewer": "reader",
            "Commenter": "commenter", 
            "Editor": "writer"
        }
    
    def _get_reverse_role_mapping(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –æ—Ç API –∑–Ω–∞—á–µ–Ω–∏–π –∫ –ø–æ–Ω—è—Ç–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏—è–º"""
        return {
            "reader": "Viewer",
            "commenter": "Commenter",
            "writer": "Editor",
            "owner": "Owner"
        }
    
    def _convert_role_to_api(self, display_role):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –≤ API –∑–Ω–∞—á–µ–Ω–∏–µ"""
        mapping = self._get_role_mapping()
        return mapping.get(display_role, display_role.lower())
    
    def _convert_role_from_api(self, api_role):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç API –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –≤ –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"""
        mapping = self._get_reverse_role_mapping()
        return mapping.get(api_role, api_role.capitalize())
    
    def _on_document_selected(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞"""
        selected_doc = self.doc_combo_var.get()
        if selected_doc in self.predefined_docs:
            url = self.predefined_docs[selected_doc]
            self.url_entry.delete(0, tk.END)
            self.url_entry.insert(0, url)
    
    def _select_predefined_document(self):
        """–í—ã–±–æ—Ä –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞"""
        selected_doc = self.doc_combo_var.get()
        if not selected_doc:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞")
            return
        
        if selected_doc in self.predefined_docs:
            url = self.predefined_docs[selected_doc]
            self.url_entry.delete(0, tk.END)
            self.url_entry.insert(0, url)
            self.current_document_url = url
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
            self._load_document_info()
            
            logger.info(f"–í—ã–±—Ä–∞–Ω –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: {selected_doc}")
    
    def _get_document_type_emoji(self, url):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        if "/document/" in url:
            return "üìÑ"
        elif "/spreadsheets/" in url:
            return "üìä" 
        elif "/presentation/" in url:
            return "üìã"
        else:
            return "üìé"
    
    def _initialize_default_document(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–µ–¥–∏ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö
        for doc_name, doc_url in self.predefined_docs.items():
            if doc_url == self.current_document_url:
                self.doc_combo_var.set(doc_name)
                break
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
        self._load_document_info()
    
    def _create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        main_frame = tk.Frame(self.window, bg=ModernColors.BACKGROUND)
        main_frame.pack(fill='both', expand=True, padx=10, pady=10)  # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_frame = tk.Frame(main_frame, bg=ModernColors.BACKGROUND)
        title_frame.pack(fill='x', pady=(0, 10))  # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø
        
        title_label = tk.Label(
            title_frame,
            text="üìÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –∫ Google –¥–æ–∫—É–º–µ–Ω—Ç–∞–º",
            font=('Segoe UI', 12, 'bold'),  # –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY
        )
        title_label.pack()
        
        # –†–∞–º–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        doc_select_frame = tk.LabelFrame(
            self.window,
            text="–í—ã–±–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞",
            font=('Segoe UI', 9, 'bold'),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY,
            padx=6,
            pady=4
        )
        doc_select_frame.pack(fill='x', padx=10, pady=6)
        
        # –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
        self.predefined_docs = {
            "üìÑ –î–æ–∫—É–º–µ–Ω—Ç Google Docs": "https://docs.google.com/document/d/1iXos0bTHv3nwXcYvAjPSIYzQOflcygwjj4LKD5Rftdk/edit#heading=h.mfzrrwzcspx2",
            "üìä –¢–∞–±–ª–∏—Ü–∞ Google Sheets": "https://docs.google.com/spreadsheets/d/1ErK5XLx7QEUJv22XC-UBQGyig3Otfm-xR1A1-hm8eDA/edit#gid=1326342300", 
            "üìã –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è Google Slides": "https://docs.google.com/presentation/d/1ia0PmtgJBaY3Q97gaA1TNyJFJF7vgXhsGh1iF1WOQ_E/edit#slide=id.g2dca74c59e7_0_0"
        }
        
        # –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        doc_combo_frame = tk.Frame(doc_select_frame, bg=ModernColors.BACKGROUND)
        doc_combo_frame.pack(fill='x', pady=(0, 8))
        
        tk.Label(
            doc_combo_frame,
            text="–ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä:",
            font=('Segoe UI', 9),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY
        ).pack(side='left', padx=(0, 8))
        
        self.doc_combo_var = tk.StringVar()
        self.doc_combo = ttk.Combobox(
            doc_combo_frame,
            textvariable=self.doc_combo_var,
            values=list(self.predefined_docs.keys()),
            state="readonly",
            width=35
        )
        self.doc_combo.pack(side='left', fill='x', expand=True, padx=(0, 8))
        self.doc_combo.bind('<<ComboboxSelected>>', self._on_document_selected)
        
        # –ö–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å"
        ModernButton(
            doc_combo_frame,
            text="–í—ã–±—Ä–∞—Ç—å",
            command=self._select_predefined_document,
            button_type="primary"
        ).pack(side='right')
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ URL
        url_input_frame = tk.Frame(doc_select_frame, bg=ModernColors.BACKGROUND)
        url_input_frame.pack(fill='x')
        
        tk.Label(
            url_input_frame,
            text="–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ URL:",
            font=('Segoe UI', 9),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY
        ).pack(anchor='w', pady=(0, 4))
        
        url_entry_frame = tk.Frame(url_input_frame, bg=ModernColors.BACKGROUND)
        url_entry_frame.pack(fill='x')
        
        self.url_entry = tk.Entry(
            url_entry_frame,
            font=('Segoe UI', 10),
            bg='white',
            fg=ModernColors.TEXT_PRIMARY,
            relief='solid',
            bd=1
        )
        self.url_entry.pack(side='left', fill='x', expand=True, padx=(0, 10))
        self.url_entry.insert(0, self.current_document_url)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è URL –ø–æ–ª—è
        self.url_entry.bind('<Control-c>', lambda e: self._copy_url())
        self.url_entry.bind('<Control-v>', lambda e: self._paste_url())
        self.url_entry.bind('<Control-x>', lambda e: self._cut_url())
        self.url_entry.bind('<Control-a>', lambda e: self._select_all_url())
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—è URL
        self._setup_url_context_menu()
        
        ModernButton(
            url_entry_frame,
            text="–ó–∞–≥—Ä—É–∑–∏—Ç—å",
            command=self._load_document_info,
            button_type="primary"
        ).pack(side='right')
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
        self.doc_info_frame = tk.LabelFrame(
            self.window,
            text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ",
            font=('Segoe UI', 9, 'bold'),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY,
            padx=6,    # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
            pady=4     # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        )
        self.doc_info_frame.pack(fill='x', padx=10, pady=6)  # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        
        self.doc_info_label = tk.Label(
            self.doc_info_frame,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            font=('Segoe UI', 9),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_SECONDARY,
            justify='left'
        )
        self.doc_info_label.pack(anchor='w')
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º
        access_frame = tk.LabelFrame(
            self.window,
            text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º",
            font=('Segoe UI', 9, 'bold'),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY,
            padx=6,    # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
            pady=4     # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        )
        access_frame.pack(fill='x', padx=10, pady=6)  # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
        add_access_frame = tk.Frame(access_frame, bg=ModernColors.BACKGROUND)
        add_access_frame.pack(fill='x', pady=(0, 6))  # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø
        
        tk.Label(
            add_access_frame,
            text="Email:",
            font=('Segoe UI', 9),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY
        ).pack(side='left')
        
        self.email_entry = tk.Entry(
            add_access_frame,
            font=('Segoe UI', 9),
            bg='white',
            fg=ModernColors.TEXT_PRIMARY,
            relief='solid',
            bd=1,
            width=28
        )
        self.email_entry.pack(side='left', padx=(8, 8))
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è Email –ø–æ–ª—è
        self.email_entry.bind('<Control-c>', lambda e: self._copy_email())
        self.email_entry.bind('<Control-v>', lambda e: self._paste_email())
        self.email_entry.bind('<Control-x>', lambda e: self._cut_email())
        self.email_entry.bind('<Control-a>', lambda e: self._select_all_email())
        
        tk.Label(
            add_access_frame,
            text="–†–æ–ª—å:",
            font=('Segoe UI', 9),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY
        ).pack(side='left')
        
        self.role_var = tk.StringVar(value="Viewer")
        role_combo = ttk.Combobox(
            add_access_frame,
            textvariable=self.role_var,
            values=["Viewer", "Commenter", "Editor"],
            state="readonly",
            width=12
        )
        role_combo.pack(side='left', padx=(8, 8))
        
        ModernButton(
            add_access_frame,
            text="–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø",
            command=self._add_access,
            button_type="success"
        ).pack(side='left', padx=(8, 0))
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notify_frame = tk.Frame(access_frame, bg=ModernColors.BACKGROUND)
        notify_frame.pack(fill='x', pady=(8, 0))
        
        self.notify_var = tk.BooleanVar(value=True)
        notify_check = tk.Checkbutton(
            notify_frame,
            text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ email",
            variable=self.notify_var,
            font=('Segoe UI', 9),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY,
            selectcolor='white'
        )
        notify_check.pack(side='left')
        
        # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        permissions_frame = tk.LabelFrame(
            self.window,
            text="–¢–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è",
            font=('Segoe UI', 9, 'bold'),
            bg=ModernColors.BACKGROUND,
            fg=ModernColors.TEXT_PRIMARY,
            padx=6,    # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
            pady=4     # –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        )
        permissions_frame.pack(fill='both', expand=False, padx=10, pady=6)  # –£–±—Ä–∞–ª–∏ expand=True
        
        # –¢–∞–±–ª–∏—Ü–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        columns = ('Email', '–†–æ–ª—å', '–¢–∏–ø')
        self.permissions_tree = ttk.Treeview(
            permissions_frame,
            columns=columns,
            show='headings',
            height=6  # –£–º–µ–Ω—å—à–∏–ª–∏ –≤—ã—Å–æ—Ç—É —Ç–∞–±–ª–∏—Ü—ã —Å 8 –¥–æ 6
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        self.permissions_tree.heading('Email', text='Email')
        self.permissions_tree.heading('–†–æ–ª—å', text='–†–æ–ª—å')
        self.permissions_tree.heading('–¢–∏–ø', text='–¢–∏–ø')
        
        self.permissions_tree.column('Email', width=250)  # –£–º–µ–Ω—å—à–∏–ª–∏ —à–∏—Ä–∏–Ω—É
        self.permissions_tree.column('–†–æ–ª—å', width=120)   # –£–º–µ–Ω—å—à–∏–ª–∏ —à–∏—Ä–∏–Ω—É
        self.permissions_tree.column('–¢–∏–ø', width=80)     # –£–º–µ–Ω—å—à–∏–ª–∏ —à–∏—Ä–∏–Ω—É
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        scrollbar = ttk.Scrollbar(permissions_frame, orient='vertical', command=self.permissions_tree.yview)
        self.permissions_tree.configure(yscrollcommand=scrollbar.set)
        
        self.permissions_tree.pack(side='left', fill='both', expand=True)
        scrollbar.pack(side='right', fill='y')
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≥–æ—Ä—è—á—É—é –∫–ª–∞–≤–∏—à—É Ctrl+C –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è email –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        self.permissions_tree.bind('<Control-c>', lambda e: self._copy_selected_email())
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏)
        buttons_frame = tk.Frame(self.window, bg=ModernColors.BACKGROUND, height=50)
        buttons_frame.pack(fill='x', padx=10, pady=10, side='bottom')  # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–Ω–∏–∑—É
        buttons_frame.pack_propagate(False)  # –§–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É
        
        # –°–æ–∑–¥–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ—Ä–µ–π–º –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        inner_buttons_frame = tk.Frame(buttons_frame, bg=ModernColors.BACKGROUND)
        inner_buttons_frame.pack(expand=True, fill='both')
        
        ModernButton(
            inner_buttons_frame,
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫",  # –î–æ–±–∞–≤–∏–ª–∏ –∏–∫–æ–Ω–∫—É
            command=self._refresh_permissions,
            button_type="info"
        ).pack(side='left', padx=(0, 15), pady=10)
        
        ModernButton(
            inner_buttons_frame,
            text="‚ùå –ó–∞–∫—Ä—ã—Ç—å",  # –î–æ–±–∞–≤–∏–ª–∏ –∏–∫–æ–Ω–∫—É
            command=self.window.destroy,
            button_type="secondary"
        ).pack(side='right', padx=(15, 0), pady=10)
    
    def _setup_url_context_menu(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—è URL —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤—Å—Ç–∞–≤–∫–∏"""
        self.url_context_menu = tk.Menu(self.window, tearoff=0)
        
        self.url_context_menu.add_command(label="–í—ã—Ä–µ–∑–∞—Ç—å", command=self._cut_url)
        self.url_context_menu.add_command(label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", command=self._copy_url)
        self.url_context_menu.add_command(label="–í—Å—Ç–∞–≤–∏—Ç—å", command=self._paste_url)
        self.url_context_menu.add_separator()
        self.url_context_menu.add_command(label="–í—ã–¥–µ–ª–∏—Ç—å –≤—Å—ë", command=self._select_all_url)
        
        def show_url_context_menu(event):
            try:
                self.url_context_menu.post(event.x_root, event.y_root)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é URL: {e}")
        
        self.url_entry.bind("<Button-3>", show_url_context_menu)  # –ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
    
    def _setup_email_context_menu(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—è Email —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤—Å—Ç–∞–≤–∫–∏"""
        self.email_context_menu = tk.Menu(self.window, tearoff=0)
        
        self.email_context_menu.add_command(label="–í—ã—Ä–µ–∑–∞—Ç—å", command=self._cut_email)
        self.email_context_menu.add_command(label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", command=self._copy_email)
        self.email_context_menu.add_command(label="–í—Å—Ç–∞–≤–∏—Ç—å", command=self._paste_email)
        self.email_context_menu.add_separator()
        self.email_context_menu.add_command(label="–í—ã–¥–µ–ª–∏—Ç—å –≤—Å—ë", command=self._select_all_email)
        
        def show_email_context_menu(event):
            try:
                self.email_context_menu.post(event.x_root, event.y_root)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é Email: {e}")
        
        self.email_entry.bind("<Button-3>", show_email_context_menu)  # –ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
    
    def _cut_url(self):
        """–í—ã—Ä–µ–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è URL"""
        try:
            if self.url_entry.selection_present():
                self.url_entry.event_generate("<<Cut>>")
        except tk.TclError:
            pass
    
    def _copy_url(self):
        """–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è URL"""
        try:
            if self.url_entry.selection_present():
                self.url_entry.event_generate("<<Copy>>")
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è, –∫–æ–ø–∏—Ä—É–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
                self.window.clipboard_clear()
                self.window.clipboard_append(self.url_entry.get())
        except tk.TclError:
            pass
    
    def _paste_url(self):
        """–í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ URL"""
        try:
            self.url_entry.event_generate("<<Paste>>")
        except tk.TclError:
            pass
    
    def _select_all_url(self):
        """–í—ã–¥–µ–ª–∏—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ URL"""
        try:
            self.url_entry.select_range(0, tk.END)
            self.url_entry.icursor(tk.END)
        except tk.TclError:
            pass
    
    def _cut_email(self):
        """–í—ã—Ä–µ–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è Email"""
        try:
            if self.email_entry.selection_present():
                self.email_entry.event_generate("<<Cut>>")
        except tk.TclError:
            pass
    
    def _copy_email(self):
        """–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è Email"""
        try:
            if self.email_entry.selection_present():
                self.email_entry.event_generate("<<Copy>>")
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è, –∫–æ–ø–∏—Ä—É–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
                self.window.clipboard_clear()
                self.window.clipboard_append(self.email_entry.get())
        except tk.TclError:
            pass
    
    def _paste_email(self):
        """–í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ Email"""
        try:
            self.email_entry.event_generate("<<Paste>>")
        except tk.TclError:
            pass
    
    def _select_all_email(self):
        """–í—ã–¥–µ–ª–∏—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ Email"""
        try:
            self.email_entry.select_range(0, tk.END)
            self.email_entry.icursor(tk.END)
        except tk.TclError:
            pass

    def _setup_context_menu(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"""
        self.context_menu = tk.Menu(self.window, tearoff=0)
        self.context_menu.add_command(label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å email", command=self._copy_selected_email)
        self.context_menu.add_separator()
        self.context_menu.add_command(label="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å", command=self._change_role)
        self.context_menu.add_command(label="–£–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø", command=self._remove_access)
        
        def show_context_menu(event):
            try:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
                item = self.permissions_tree.identify_row(event.y)
                if item:
                    self.permissions_tree.selection_set(item)
                    self.context_menu.post(event.x_root, event.y_root)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
        
        self.permissions_tree.bind("<Button-3>", show_context_menu)  # –ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
    
    def _copy_selected_email(self):
        """–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å email –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
        try:
            selected_items = self.permissions_tree.selection()
            if not selected_items:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è email")
                return
            
            item = selected_items[0]
            values = self.permissions_tree.item(item)['values']
            if values and len(values) > 0:
                email = values[0]  # Email –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ
                self.window.clipboard_clear()
                self.window.clipboard_append(email)
                logger.info(f"Email —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞: {email}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ email: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å email: {e}")
    
    def _load_document_info(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ"""
        try:
            url = self.url_entry.get().strip()
            if not url:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ URL –¥–æ–∫—É–º–µ–Ω—Ç–∞")
                return
            
            self.current_document_url = url
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
            doc_info = self.document_service.get_document_info(url)
            
            if doc_info:
                self.current_doc_info = doc_info
                
                # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                doc_emoji = self._get_document_type_emoji(url)
                
                info_text = f"{doc_emoji} –ù–∞–∑–≤–∞–Ω–∏–µ: {doc_info.name}\nüë§ –í–ª–∞–¥–µ–ª–µ—Ü: {doc_info.owner}\nüîó URL: {doc_info.url}"
                self.doc_info_label.config(text=info_text)
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
                self._refresh_permissions()
                
                logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ: {doc_info.name}")
            else:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")
    
    def _refresh_permissions(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"""
        try:
            if not self.current_document_url:
                return
            
            # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            for item in self.permissions_tree.get_children():
                self.permissions_tree.delete(item)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
            permissions = self.document_service.list_document_permissions(self.current_document_url)
            
            if permissions:
                for perm in permissions:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏
                    email = getattr(perm, 'email_address', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    api_role = getattr(perm, 'role', 'reader')
                    display_role = self._convert_role_from_api(api_role)
                    perm_type = self.document_service.get_permission_type_description(getattr(perm, 'type', 'user'))
                    
                    self.permissions_tree.insert('', 'end', values=(email, display_role, perm_type))
                
                logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {len(permissions)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {str(e)}")
    
    def _add_access(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É"""
        try:
            email = self.email_entry.get().strip()
            display_role = self.role_var.get()
            api_role = self._convert_role_to_api(display_role)
            notify = self.notify_var.get()
            
            if not email:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return
            
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ email
            import re
            email_pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
            if not re.match(email_pattern, email):
                messagebox.showwarning("–ù–µ–≤–µ—Ä–Ω—ã–π email", 
                                     f"–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å.\n"
                                     f"–ü—Ä–∏–º–µ—Ä: user@example.com")
                return
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö email
            if email.endswith('@sputnik8.com'):
                notify = True  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
                logger.info(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ email: {email}")
            
            if not self.current_document_url:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ")
                return
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø
            request = DocumentAccessRequest(
                document_url=self.current_document_url,
                user_email=email,
                role=api_role,
                notify=notify,
                message=f"–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É —Å —Ä–æ–ª—å—é '{display_role}'"
            )
            
            # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø
            if self.document_service.grant_access(request):
                messagebox.showinfo("–£—Å–ø–µ—Ö", f"–î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {email}\n–†–æ–ª—å: {display_role}")
                self.email_entry.delete(0, tk.END)
                self._refresh_permissions()
                logger.info(f"–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {email} —Å —Ä–æ–ª—å—é {display_role} ({api_role})")
            else:
                # –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                error_msg = (
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {email}.\n\n"
                    f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                    f"‚Ä¢ Email –∞–¥—Ä–µ—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º\n"
                    f"‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—É\n"
                    f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Google API\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø\n\n"
                    f"–ï—Å–ª–∏ email –Ω–µ –∏–º–µ–µ—Ç Google –∞–∫–∫–∞—É–Ω—Ç–∞, —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n"
                    f"–æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ email.\n\n"
                    f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                )
                messagebox.showerror("–û—à–∏–±–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞", error_msg)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞: {str(e)}")
    
    def _remove_access(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É"""
        try:
            selection = self.permissions_tree.selection()
            if not selection:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                return
            
            item = selection[0]
            email = self.permissions_tree.item(item)['values'][0]
            
            if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", f"–£–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø –¥–ª—è {email}?"):
                if self.document_service.revoke_access(self.current_document_url, email):
                    messagebox.showinfo("–£—Å–ø–µ—Ö", f"–î–æ—Å—Ç—É–ø –æ—Ç–æ–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {email}")
                    self._refresh_permissions()
                    logger.info(f"–û—Ç–æ–∑–≤–∞–Ω –¥–æ—Å—Ç—É–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {email}")
                else:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø")
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞: {str(e)}")
    
    def _change_role(self):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            selection = self.permissions_tree.selection()
            if not selection:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è")
                return
            
            item = selection[0]
            email = self.permissions_tree.item(item)['values'][0]
            current_display_role = self.permissions_tree.item(item)['values'][1]
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Ä–æ–ª–∏ —Å Combobox
            dialog = tk.Toplevel(self.window)
            dialog.title("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏")
            dialog.geometry("400x200")
            dialog.configure(bg=ModernColors.BACKGROUND)
            dialog.transient(self.window)
            dialog.grab_set()
            
            # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥
            dialog.geometry("+%d+%d" % (self.window.winfo_rootx() + 50, 
                                       self.window.winfo_rooty() + 50))
            
            # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–ª–æ–≥–∞
            tk.Label(
                dialog,
                text=f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
                font=('Segoe UI', 10, 'bold'),
                bg=ModernColors.BACKGROUND,
                fg=ModernColors.TEXT_PRIMARY
            ).pack(pady=(20, 10))
            
            tk.Label(
                dialog,
                text=email,
                font=('Segoe UI', 10),
                bg=ModernColors.BACKGROUND,
                fg=ModernColors.TEXT_SECONDARY
            ).pack(pady=(0, 10))
            
            tk.Label(
                dialog,
                text=f"–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: {current_display_role}",
                font=('Segoe UI', 9),
                bg=ModernColors.BACKGROUND,
                fg=ModernColors.TEXT_SECONDARY
            ).pack(pady=(0, 15))
            
            # –í—ã–±–æ—Ä –Ω–æ–≤–æ–π —Ä–æ–ª–∏
            role_frame = tk.Frame(dialog, bg=ModernColors.BACKGROUND)
            role_frame.pack(pady=10)
            
            tk.Label(
                role_frame,
                text="–ù–æ–≤–∞—è —Ä–æ–ª—å:",
                font=('Segoe UI', 9),
                bg=ModernColors.BACKGROUND,
                fg=ModernColors.TEXT_PRIMARY
            ).pack(side='left', padx=(0, 10))
            
            new_role_var = tk.StringVar(value=current_display_role)
            role_combo = ttk.Combobox(
                role_frame,
                textvariable=new_role_var,
                values=["Viewer", "Commenter", "Editor"],
                state="readonly",
                width=12
            )
            role_combo.pack(side='left')
            
            # –ö–Ω–æ–ø–∫–∏
            button_frame = tk.Frame(dialog, bg=ModernColors.BACKGROUND)
            button_frame.pack(pady=20)
            
            result = {'confirmed': False, 'new_role': None}
            
            def confirm():
                result['confirmed'] = True
                result['new_role'] = new_role_var.get()
                dialog.destroy()
            
            def cancel():
                dialog.destroy()
            
            ModernButton(
                button_frame,
                text="–ò–∑–º–µ–Ω–∏—Ç—å",
                command=confirm,
                button_type="success"
            ).pack(side='left', padx=(0, 10))
            
            ModernButton(
                button_frame,
                text="–û—Ç–º–µ–Ω–∞", 
                command=cancel,
                button_type="secondary"
            ).pack(side='left')
            
            # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
            dialog.wait_window()
            
            if result['confirmed'] and result['new_role']:
                new_display_role = result['new_role']
                new_api_role = self._convert_role_to_api(new_display_role)
                
                if self.document_service.change_access_role(self.current_document_url, email, new_api_role):
                    messagebox.showinfo("–£—Å–ø–µ—Ö", f"–†–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –¥–ª—è {email}\n–ù–æ–≤–∞—è —Ä–æ–ª—å: {new_display_role}")
                    self._refresh_permissions()
                    logger.info(f"–ò–∑–º–µ–Ω–µ–Ω–∞ —Ä–æ–ª—å –¥–ª—è {email} –Ω–∞ {new_display_role} ({new_api_role})")
                else:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏: {str(e)}")
