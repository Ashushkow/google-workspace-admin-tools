#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å "–ú–æ–µ–π –ö–æ–º–∞–Ω–¥–æ–π"
"""

import tkinter as tk
from src.ui.myteam_user_window import open_myteam_user_window
from src.api.myteam_api import create_myteam_api, MyTeamUser, validate_myteam_user_data

def test_api_without_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...")
    
    api_client = create_myteam_api("")
    result = api_client.test_connection()
    
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {result}")
    print(f"   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {result['success']}")
    print(f"   Endpoints: {list(result['endpoints'].keys())}")
    
    for endpoint, data in result['endpoints'].items():
        status = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if data.get('accessible') else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        auth_req = " (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)" if data.get('requires_auth') else ""
        print(f"     {endpoint}: {status}{auth_req}")

def test_user_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    result1 = validate_myteam_user_data(
        email="test@sputnik8.com",
        first_name="–ò–≤–∞–Ω",
        last_name="–ü–µ—Ç—Ä–æ–≤",
        phone="+7 (999) 123-45-67",
        department="IT",
        position="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
    )
    print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {result1}")
    
    # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    result2 = validate_myteam_user_data(
        email="invalid-email",
        first_name="",
        last_name="–ü–µ—Ç—Ä–æ–≤",
        phone="abc",
        department="IT",
        position="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
    )
    print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {result2}")

def test_ui_window():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç UI –æ–∫–Ω–æ"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –æ–∫–Ω–∞...")
    
    root = tk.Tk()
    root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    
    def on_created():
        print("‚úÖ Callback: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω!")
    
    window = open_myteam_user_window(
        master=root,
        api_token="",  # –ü—É—Å—Ç–æ–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∞
        on_created=on_created
    )
    
    if window:
        print("‚úÖ –û–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ —É—Å–ø–µ—à–Ω–æ")
        print("‚ÑπÔ∏è  –ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞")
        root.mainloop()
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° \"–ú–û–ï–ô –ö–û–ú–ê–ù–î–û–ô\"\n")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
        test_api_without_token()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        test_user_validation()
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ UI
        print("\n‚ùì –•–æ—Ç–∏—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å UI –æ–∫–Ω–æ? (y/n): ", end="")
        response = input().lower().strip()
        
        if response in ['y', 'yes', '–¥–∞', '–¥']:
            test_ui_window()
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()