#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –æ–∫–æ–Ω —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
"""

import tkinter as tk
from tkinter import messagebox
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent.parent / 'src'))

from src.ui.modern_styles import (ModernWindowConfig, CompactFrame, CompactLabel, 
                                 CompactEntry, CompactButton, CompactListbox,
                                 apply_modern_window_style, create_title_section, 
                                 center_window_modern, ButtonRow)
from src.ui.ui_components import ModernColors


class CompactWindowDemo:
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –æ–∫–æ–Ω"""
    
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –æ–∫–æ–Ω")
        self.root.geometry("400x300")
        self.root.configure(bg=ModernColors.BACKGROUND)
        
        self.create_demo_ui()
        
    def create_demo_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_frame = create_title_section(self.root, "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –æ–∫–æ–Ω")
        title_frame.pack(fill='x', **ModernWindowConfig.PADDING['window'])
        
        # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
        main_frame = CompactFrame(self.root, padding_type='section')
        main_frame.pack(fill='both', expand=True, **ModernWindowConfig.PADDING['window'])
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        button_configs = [
            {'text': 'üë§ –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'command': self.show_create_user, 'style': 'primary'},
            {'text': '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'command': self.show_edit_user, 'style': 'secondary'},
            {'text': 'üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏', 'command': self.show_group_management, 'style': 'info'},
            {'text': 'üìß Asana –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ', 'command': self.show_asana_invite, 'style': 'success'},
            {'text': 'üìã –ñ—É—Ä–Ω–∞–ª –æ—à–∏–±–æ–∫', 'command': self.show_error_log, 'style': 'warning'},
            {'text': 'üîó FreeIPA —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', 'command': self.show_freeipa, 'style': 'danger'}
        ]
        
        # –ö–Ω–æ–ø–∫–∏ –≤ –¥–≤–∞ —Ä—è–¥–∞ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
        buttons_row = ButtonRow(main_frame, button_configs, max_per_row=2)
        buttons_row.pack(fill='x', pady=20)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
        info_frame = CompactFrame(main_frame, padding_type='small')
        info_frame.pack(fill='x', pady=(20, 0))
        
        CompactLabel(info_frame, text="–£–ª—É—á—à–µ–Ω–∏—è –≤ –¥–∏–∑–∞–π–Ω–µ:", font_type='subtitle').pack(anchor='w')
        
        improvements = [
            "‚úÖ –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –æ–∫–æ–Ω",
            "‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ —à—Ä–∏—Ñ—Ç—ã",
            "‚úÖ –ö–Ω–æ–ø–∫–∏ –≤ –¥–≤–∞ —Ä—è–¥–∞",
            "‚úÖ –ï–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π —Å—Ç–∏–ª—å",
            "‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å",
            "‚úÖ –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ UX/UI —Ç—Ä–µ–Ω–¥–∞–º"
        ]
        
        for improvement in improvements:
            CompactLabel(info_frame, text=improvement, font_type='small').pack(anchor='w', pady=1)
    
    def show_create_user(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            from src.ui.user_windows import CreateUserWindow
            # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
            window = CreateUserWindow(self.root, service=None)
        except Exception as e:
            messagebox.showinfo("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è", f"–û–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–†–∞–∑–º–µ—Ä: {ModernWindowConfig.WINDOW_SIZES['create_user']}")
    
    def show_edit_user(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            from src.ui.user_windows import EditUserWindow
            window = EditUserWindow(self.root, service=None)
        except Exception as e:
            messagebox.showinfo("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è", f"–û–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–†–∞–∑–º–µ—Ä: {ModernWindowConfig.WINDOW_SIZES['edit_user']}")
    
    def show_group_management(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏"""
        try:
            from src.ui.group_management import GroupManagementWindow
            window = GroupManagementWindow(self.root, service=None)
        except Exception as e:
            messagebox.showinfo("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è", f"–û–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏\n–†–∞–∑–º–µ—Ä: {ModernWindowConfig.WINDOW_SIZES['group_management']}")
    
    def show_asana_invite(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–Ω–∞ Asana –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        try:
            from src.ui.additional_windows import AsanaInviteWindow
            window = AsanaInviteWindow(self.root)
        except Exception as e:
            messagebox.showinfo("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è", f"–û–∫–Ω–æ Asana –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è\n–†–∞–∑–º–µ—Ä: {ModernWindowConfig.WINDOW_SIZES['asana_invite']}")
    
    def show_error_log(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–Ω–∞ –∂—É—Ä–Ω–∞–ª–∞ –æ—à–∏–±–æ–∫"""
        try:
            from src.ui.additional_windows import ErrorLogWindow
            window = ErrorLogWindow(self.root)
        except Exception as e:
            messagebox.showinfo("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è", f"–û–∫–Ω–æ –∂—É—Ä–Ω–∞–ª–∞ –æ—à–∏–±–æ–∫\n–†–∞–∑–º–µ—Ä: {ModernWindowConfig.WINDOW_SIZES['error_log']}")
    
    def show_freeipa(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–∫–Ω–∞ FreeIPA"""
        try:
            from src.ui.freeipa_management import FreeIPAManagementWindow
            window = FreeIPAManagementWindow(self.root)
        except Exception as e:
            messagebox.showinfo("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è", f"–û–∫–Ω–æ FreeIPA —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n–†–∞–∑–º–µ—Ä: {ModernWindowConfig.WINDOW_SIZES['freeipa_management']}")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
        self.root.mainloop()


if __name__ == "__main__":
    demo = CompactWindowDemo()
    demo.run()
