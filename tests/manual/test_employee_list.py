#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –æ–∫–Ω–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent.parent.parent))

from src.auth import get_service


def test_employee_list():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ–∫–Ω–µ —Å–ø–∏—Å–∫–∞"""
    print("=" * 70)
    print("üîç –¢–ï–°–¢ –û–ö–ù–ê –°–ü–ò–°–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 70)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
        service = get_service()
        print("‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Google API (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç —Å—Ç–∞—Ä—ã–π –∫–æ–¥)
        all_users = []
        page_token = None
        page_count = 0
        
        while True:
            page_count += 1
            print(f"  üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É {page_count}...")
            
            request_params = {
                'customer': 'my_customer',
                'maxResults': 500,
                'orderBy': 'email'
            }
            
            if page_token:
                request_params['pageToken'] = page_token
            
            result = service.users().list(**request_params).execute()
            page_users = result.get('users', [])
            
            if page_users:
                all_users.extend(page_users)
                print(f"    ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(page_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Å–µ–≥–æ: {len(all_users)})")
            
            page_token = result.get('nextPageToken')
            if not page_token:
                print(f"    üèÅ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
                break
            
            if page_count > 50:
                print(f"    ‚ö†Ô∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ {page_count} —Å—Ç—Ä–∞–Ω–∏—Ü (–∑–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞)")
                break
        
        print(f"\\n‚úÖ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(all_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        kirill_user = None
        for i, user in enumerate(all_users):
            email = user.get('primaryEmail', '')
            if 'kirill.kropochev' in email.lower():
                kirill_user = user
                print(f"üîç –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Kirill –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {i+1}: {email}")
                print(f"   –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
                for key, value in user.items():
                    if key in ['primaryEmail', 'name', 'suspended', 'orgUnitPath', 'creationTime']:
                        print(f"     {key}: {value}")
                break
        
        if not kirill_user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å kirill.kropochev –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("üîç –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –ø–æ –∏–º–µ–Ω–∏ 'kirill':")
            for i, user in enumerate(all_users):
                email = user.get('primaryEmail', '').lower()
                name = str(user.get('name', {})).lower()
                if 'kirill' in email or 'kirill' in name:
                    print(f"  {i+1:3d}. {user.get('primaryEmail', '')} - {user.get('name', {})}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ–∫—Ä—É–≥ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ Kirill
        print(f"\\nÔøΩ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –≤–æ–∫—Ä—É–≥ –±—É–∫–≤—ã 'K':")
        k_users = []
        for i, user in enumerate(all_users):
            email = user.get('primaryEmail', '').lower()
            if email.startswith('k'):
                k_users.append((i+1, user.get('primaryEmail', ''), user.get('name', {}).get('fullName', '')))
        
        for pos, email, name in k_users[:20]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 20 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –±—É–∫–≤—É K
            print(f"  {pos:3d}. {email} ({name})")
            
        if len(k_users) > 20:
            print(f"  ... –∏ –µ—â–µ {len(k_users)-20} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –±—É–∫–≤—É 'K'")
        
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    test_employee_list()
