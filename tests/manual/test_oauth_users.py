#!/usr/bin/env python3
import os
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from googleapiclient.discovery import build
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent.parent))

import pickle
import json

# –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±–ª–∞—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞
SCOPES = [
    'https://www.googleapis.com/auth/admin.directory.user',
    'https://www.googleapis.com/auth/admin.directory.group',
    'https://www.googleapis.com/auth/admin.directory.orgunit',
]

def get_credentials():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ OAuth 2.0 credentials"""
    creds = None
    token_path = Path("token.pickle")
    credentials_path = Path("credentials.json")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω
    if token_path.exists():
        print("üîç –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω, –ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ...")
        with open(token_path, 'rb') as token:
            creds = pickle.load(token)

    # –ï—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω...")
            creds.refresh(Request())
        else:
            print("üîê –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å OAuth 2.0 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            if not credentials_path.exists():
                raise FileNotFoundError("‚ùå –§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            
            flow = InstalledAppFlow.from_client_secrets_file(
                str(credentials_path), SCOPES)
            creds = flow.run_local_server(port=0)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
        with open(token_path, 'wb') as token:
            pickle.dump(creds, token)
            print("üíæ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤")

    return creds

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("=" * 70)
    print("üîç –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø OAUTH 2.0 –ö GOOGLE WORKSPACE")
    print("=" * 70)

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º credentials.json
        credentials_path = Path("credentials.json")
        if credentials_path.exists():
            with open(credentials_path, 'r') as f:
                creds_data = json.load(f)
                if 'installed' not in creds_data:
                    print("‚ùå credentials.json –Ω–µ —è–≤–ª—è–µ—Ç—Å—è OAuth 2.0 Desktop —Ç–∏–ø–æ–º!")
                    print("üìã –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π credentials.json –∏–∑ Google Cloud Console")
                    return 1
        else:
            print("‚ùå –§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return 1

        # –ü–æ–ª—É—á–∞–µ–º credentials
        creds = get_credentials()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ credentials")

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å Directory API
        print("üåê –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å Directory API...")
        service = build('admin', 'directory_v1', credentials=creds)
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("üë• –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        results = service.users().list(
            customer='my_customer',
            maxResults=10,
            orderBy='email'
        ).execute()
        users = results.get('users', [])

        if not users:
            print("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("1. –£ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Workspace")
            print("2. –í –¥–æ–º–µ–Ω–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print("3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω OAuth consent screen")
        else:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            for user in users:
                print(f"  üìß {user['primaryEmail']} ({user['name']['fullName']})")

        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return 0

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        print("\nüîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ OAuth 2.0 Desktop credentials")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Workspace")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth consent screen")
        return 1

if __name__ == '__main__':
    exit(main())
