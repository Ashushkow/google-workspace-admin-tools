#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø Google Workspace
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent.parent))

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.auth import get_service
from src.config.enhanced_config import config

def test_groups_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≥—Ä—É–ø–ø –∏–∑ Google Workspace"""
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≥—Ä—É–ø–ø...")
    print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ scopes:")
    for scope in config.google.scopes:
        print(f"  ‚Ä¢ {scope}")
    print()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
        print("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google API...")
        service = get_service()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –≥—Ä—É–ø–ø–∞–º
        print("\nüë• –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø...")
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
            all_groups = []
            page_token = None
            page_num = 0
            
            while True:
                page_num += 1
                print(f"  üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É {page_num}...")
                
                request_params = {
                    'customer': 'my_customer',
                    'maxResults': 200
                }
                
                if page_token:
                    request_params['pageToken'] = page_token
                
                result = service.groups().list(**request_params).execute()
                groups = result.get('groups', [])
                
                print(f"    ‚Ü≥ –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(groups)}")
                
                if groups:
                    all_groups.extend(groups)
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥—Ä—É–ø–ø –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
                    if page_num == 1:
                        print("    üìã –ü—Ä–∏–º–µ—Ä—ã –≥—Ä—É–ø–ø:")
                        for i, group in enumerate(groups[:5]):
                            email = group.get('email', 'N/A')
                            name = group.get('name', 'N/A')
                            members_count = group.get('directMembersCount', 'N/A')
                            print(f"      {i+1}. {email} ({name}) - —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {members_count}")
                        if len(groups) > 5:
                            print(f"      ... –∏ –µ—â–µ {len(groups) - 5} –≥—Ä—É–ø–ø")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                page_token = result.get('nextPageToken')
                if not page_token:
                    break
            
            print(f"\n‚úÖ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≥—Ä—É–ø–ø: {len(all_groups)}")
            
            if all_groups:
                print("\nüìä –ê–Ω–∞–ª–∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø:")
                print(f"  ü•á –ü–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞: {all_groups[0].get('email', 'N/A')}")
                print(f"  ü•â –ü–æ—Å–ª–µ–¥–Ω—è—è –≥—Ä—É–ø–ø–∞: {all_groups[-1].get('email', 'N/A')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –≥—Ä—É–ø–ø
                group_types = {}
                for group in all_groups:
                    group_type = group.get('type', 'UNKNOWN')
                    group_types[group_type] = group_types.get(group_type, 0) + 1
                
                print(f"  üìà –¢–∏–ø—ã –≥—Ä—É–ø–ø:")
                for gtype, count in group_types.items():
                    print(f"    ‚Ä¢ {gtype}: {count} –≥—Ä—É–ø–ø")
                    
                return True
            else:
                print("‚ö†Ô∏è –ì—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
                print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("  ‚Ä¢ –í –¥–æ–º–µ–Ω–µ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø")
                print("  ‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                print("  ‚Ä¢ –ì—Ä—É–ø–ø—ã —Å–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
                return False
                
        except Exception as groups_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø: {groups_error}")
            if "403" in str(groups_error) or "Insufficient Permission" in str(groups_error):
                print("üí° –≠—Ç–æ –æ—à–∏–±–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                print("üîß Scope 'admin.directory.group' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω")
            return False
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø Google Workspace")
    print("=" * 60)
    
    success = test_groups_loading()
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø.")
    print("=" * 60)
