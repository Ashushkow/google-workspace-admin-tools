# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –æ–∫–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
"""

import tkinter as tk
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

class MockService:
    """–ú–æ–∫ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    pass

def test_employee_window():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
    try:
        from employee_list_window import EmployeeListWindow
        from ui_components import ModernColors
        
        print("‚úì –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞
        root = tk.Tk()
        root.withdraw()
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫ —Å–µ—Ä–≤–∏—Å–∞
        mock_service = MockService()
        
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        employee_window = EmployeeListWindow(root, mock_service)
        print("‚úì –û–∫–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
        assert hasattr(employee_window, 'search_var'), "search_var –Ω–µ –Ω–∞–π–¥–µ–Ω"
        assert hasattr(employee_window, 'status_var'), "status_var –Ω–µ –Ω–∞–π–¥–µ–Ω"
        assert hasattr(employee_window, 'orgunit_var'), "orgunit_var –Ω–µ –Ω–∞–π–¥–µ–Ω"
        assert hasattr(employee_window, 'date_from_var'), "date_from_var –Ω–µ –Ω–∞–π–¥–µ–Ω"
        assert hasattr(employee_window, 'date_to_var'), "date_to_var –Ω–µ –Ω–∞–π–¥–µ–Ω"
        print("‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        assert hasattr(employee_window, 'apply_filters'), "apply_filters –Ω–µ –Ω–∞–π–¥–µ–Ω"
        assert hasattr(employee_window, 'reset_filters'), "reset_filters –Ω–µ –Ω–∞–π–¥–µ–Ω"
        print("‚úì –ú–µ—Ç–æ–¥—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
        employee_window.search_var.set("test")
        employee_window.status_var.set("Active")
        employee_window.orgunit_var.set("IT")
        print("‚úì –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        employee_window.destroy()
        root.destroy()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_employee_window()
