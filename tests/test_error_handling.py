#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ Admin Team Tools
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ path
sys.path.insert(0, str(Path(__file__).parent.parent / 'src'))

def test_error_handling():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫...")
    
    try:
        # –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        from utils.enhanced_logger import setup_logging
        logger = setup_logging('INFO', 'test_logs')
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        from utils.environment_validator import EnvironmentValidator
        validator = EnvironmentValidator(logger)
        success, errors, warnings = validator.validate_all()
        
        print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
        print(f"   –£—Å–ø–µ—Ö: {'‚úÖ' if success else '‚ùå'}")
        print(f"   –û—à–∏–±–æ–∫: {len(errors)}")
        print(f"   –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {len(warnings)}")
        
        if errors:
            print("\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:")
            for i, error in enumerate(errors[:3], 1):
                print(f"   {i}. {error}")
        
        if warnings:
            print("\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
            for i, warning in enumerate(warnings[:3], 1):
                print(f"   {i}. {warning}")
        
        # –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫
        from utils.error_handler import ErrorHandler
        from utils.exceptions import GoogleAPIError
        
        error_handler = ErrorHandler(logger)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏
        test_error = GoogleAPIError(
            "–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ Google API",
            error_code="API_TEST_001"
        )
        
        print(f"\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫...")
        result = error_handler.handle_exception(
            test_error, 
            "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã", 
            show_dialog=False
        )
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: {'‚úÖ' if result else '‚ùå'}")
        
        print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_error_handling()
    sys.exit(0 if success else 1)
