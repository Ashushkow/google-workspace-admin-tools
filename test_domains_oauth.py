#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ OAuth 2.0 —Å –Ω–æ–≤—ã–º–∏ scopes –¥–ª—è –¥–æ–º–µ–Ω–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.auth import get_service
from src.config.enhanced_config import config

def test_domains_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º —á–µ—Ä–µ–∑ Google API"""
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º...")
    print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ scopes:")
    for scope in config.google.scopes:
        print(f"  ‚Ä¢ {scope}")
    print()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
        print("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google API...")
        service = get_service()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–æ–º–µ–Ω–∞–º
        print("\nüè¢ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤...")
        try:
            domains_result = service.domains().list(customer='my_customer').execute()
            domains = domains_result.get('domains', [])
            
            if domains:
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–æ–º–µ–Ω—ã ({len(domains)}):")
                for domain in domains:
                    print(f"  ‚Ä¢ {domain.get('domainName')} - —Å—Ç–∞—Ç—É—Å: {domain.get('verified', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            else:
                print("‚ö†Ô∏è –î–æ–º–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫)")
                
        except Exception as domain_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–æ–≤: {domain_error}")
            if "403" in str(domain_error) or "Insufficient Permission" in str(domain_error):
                print("üí° –≠—Ç–æ –æ—à–∏–±–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                print("üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
                print("  1. –£–¥–∞–ª–∏—Ç—å token.pickle –∏ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
                print("  2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å scope –≤ OAuth consent screen")
                print("  3. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç scope 'admin.directory.domain.readonly'")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        print("\nüë• –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
        try:
            users_result = service.users().list(customer='my_customer', maxResults=3).execute()
            users = users_result.get('users', [])
            print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ä–∞–±–æ—Ç–∞–µ—Ç: –Ω–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        except Exception as users_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_error}")
            return False
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("–¢–µ—Å—Ç OAuth 2.0 –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–º–µ–Ω–∞–º Google Workspace")
    print("=" * 60)
    
    success = test_domains_access()
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth 2.0.")
    print("=" * 60)
