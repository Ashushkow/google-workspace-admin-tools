#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ user_exists
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
    from src.auth import get_service
    from src.api.users_api import user_exists
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ user_exists")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
    print("–ü–æ–ª—É—á–µ–Ω–∏–µ Google API —Å–µ—Ä–≤–∏—Å–∞...")
    service = get_service()
    
    if not service:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å")
        exit(1)
    
    print("‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∑–∞–≤–µ–¥–æ–º–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    test_email = "absolutely.nonexistent.user.test12345@sputnik8.com"
    print(f"\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_email}")
    
    result = user_exists(service, test_email)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    print(f"–¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {type(result)}")
    
    if result is None:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ None")
        print("–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ API –∑–∞–ø—Ä–æ—Å–∞")
    elif result is False:
        print("‚úÖ –í—Å—ë —Ö–æ—Ä–æ—à–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å)")
    elif result is True:
        print("‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω")
    
    print("\n" + "=" * 50)
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
