#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –≤ GUI —Ä–µ–∂–∏–º–µ
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

try:
    from src.auth import get_service
    from src.api.users_api import create_user, user_exists
    import time
    
    print("üîç –¢–ï–°–¢ –°–û–°–¢–û–Ø–ù–ò–Ø API –°–ï–†–í–ò–°–ê")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫–∞–∫ –≤ GUI
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ (–∫–∞–∫ –≤ GUI)...")
    service = get_service()
    
    if not service:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å")
        exit(1)
    
    print("‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –ø–∞—É–∑–∞–º–∏
    test_emails = [
        "test.state.check1@sputnik8.com",
        "test.state.check2@sputnik8.com", 
        "test.state.check3@sputnik8.com"
    ]
    
    for i, test_email in enumerate(test_emails, 1):
        print(f"\\n{i}. –¢–µ—Å—Ç —Å {test_email}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        print("   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è...")
        try:
            exists = user_exists(service, test_email)
            print(f"   üìä user_exists —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {exists}")
            
            if exists is None:
                print("   ‚ùå –ü–†–û–ë–õ–ï–ú–ê! user_exists –≤–µ—Ä–Ω—É–ª None")
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
                print("   üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å...")
                new_service = get_service()
                
                if new_service:
                    exists_new = user_exists(new_service, test_email)
                    print(f"   üìä –° –Ω–æ–≤—ã–º —Å–µ—Ä–≤–∏—Å–æ–º: {exists_new}")
                    
                    if exists_new is not None:
                        print("   üí° –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!")
                        service = new_service  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å
                    else:
                        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å –Ω–æ–≤—ã–º —Å–µ—Ä–≤–∏—Å–æ–º")
                else:
                    print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å")
                    
            elif exists is False:
                print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
                print("   üöÄ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è...")
                result = create_user(
                    service=service,
                    email=test_email,
                    first_name="Test",
                    last_name="State",
                    password="StateTest123!",
                    org_unit_path="/"
                )
                
                print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                
                if "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ" in result:
                    print("   ‚ùå –ü–†–û–ë–õ–ï–ú–ê –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ê –≤ create_user!")
                    print("   üîç create_user –ø–æ–ª—É—á–∏–ª None –æ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞ user_exists")
                elif "—Å–æ–∑–¥–∞–Ω" in result.lower():
                    print("   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ")
                else:
                    print(f"   ‚ÑπÔ∏è –î—Ä—É–≥–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                    
            else:
                print("   ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        if i < len(test_emails):
            print("   ‚è≥ –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã...")
            time.sleep(2)
    
    print("\\n" + "=" * 60)
    print("üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("   –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å:")
    print("   1. –í –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("   2. –í –∏—Å—Ç–µ—á–µ–Ω–∏–∏ OAuth —Ç–æ–∫–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã")
    print("   3. –í –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
    print("   4. –í –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –∫–≤–æ—Ç Google API")
    print()
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("   1. –î–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö")
    print("   2. –î–æ–±–∞–≤–∏—Ç—å retry –ª–æ–≥–∏–∫—É")
    print("   3. –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞")
    
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
